import '/auth/firebase_auth/auth_util.dart';
import '/backend/api_requests/api_calls.dart';
import '/backend/backend.dart';
import '/components/loading_scene/loading_scene_widget.dart';
import '/components/p_d_f_viewer/p_d_f_viewer_widget.dart';
import '/components/search_employee_component/search_employee_component_widget.dart';
import '/components/splash_page/splash_page_widget.dart';
import '/components/splash_page_holiday/splash_page_holiday_widget.dart';
import '/components/tiktok_splash_page/tiktok_splash_page_widget.dart';
import '/flutter_flow/flutter_flow_animations.dart';
import '/flutter_flow/flutter_flow_icon_button.dart';
import '/flutter_flow/flutter_flow_theme.dart';
import '/flutter_flow/flutter_flow_util.dart';
import '/flutter_flow/flutter_flow_widgets.dart';
import 'dart:async';
import 'dart:math';
import '/custom_code/actions/index.dart' as actions;
import '/custom_code/widgets/index.dart' as custom_widgets;
import '/flutter_flow/custom_functions.dart' as functions;
import '/flutter_flow/permissions_util.dart';
import 'package:badges/badges.dart' as badges;
import 'package:smooth_page_indicator/smooth_page_indicator.dart'
    as smooth_page_indicator;
import 'package:cached_network_image/cached_network_image.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:collection/collection.dart';
import 'package:flutter/material.dart';
import 'package:flutter/scheduler.dart';
import 'package:flutter/services.dart';
import 'package:flutter_animate/flutter_animate.dart';
import 'package:flutter_blurhash/flutter_blurhash.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:octo_image/octo_image.dart';
import 'package:provider/provider.dart';
import 'package:webviewx_plus/webviewx_plus.dart';
import 'super_app_page_model.dart';
export 'super_app_page_model.dart';

class SuperAppPageWidget extends StatefulWidget {
  const SuperAppPageWidget({
    super.key,
    this.dailyText,
  });

  final String? dailyText;

  @override
  State<SuperAppPageWidget> createState() => _SuperAppPageWidgetState();
}

class _SuperAppPageWidgetState extends State<SuperAppPageWidget>
    with TickerProviderStateMixin {
  late SuperAppPageModel _model;

  final scaffoldKey = GlobalKey<ScaffoldState>();
  LatLng? currentUserLocationValue;

  final animationsMap = <String, AnimationInfo>{};

  @override
  void initState() {
    super.initState();
    _model = createModel(context, () => SuperAppPageModel());

    logFirebaseEvent('screen_view',
        parameters: {'screen_name': 'SuperAppPage'});
    // On page load action.
    SchedulerBinding.instance.addPostFrameCallback((_) async {
      if (FFAppState().adminEMP.contains(FFAppState().employeeID)) {
        if (isAndroid) {
          await actions.allowScreenRecordAndroid();
        } else {
          await actions.allowScreenRecordIOS();
        }
      } else {
        if (isAndroid) {
          await actions.preventScreenRecordAndroid();
        } else {
          await actions.preventScreenRecordIOS();
        }
      }

      if (FFAppState().apiURLLocalState == 'api_url_local_state') {
        await actions.a22();

        context.goNamed('LoginPage');

        await showDialog(
          context: context,
          builder: (alertDialogContext) {
            return WebViewAware(
              child: AlertDialog(
                content: Text('logout'),
                actions: [
                  TextButton(
                    onPressed: () => Navigator.pop(alertDialogContext),
                    child: Text('Ok'),
                  ),
                ],
              ),
            );
          },
        );
        return;
      }
      showModalBottomSheet(
        isScrollControlled: true,
        backgroundColor: Colors.transparent,
        barrierColor: Color(0x00000000),
        enableDrag: false,
        context: context,
        builder: (context) {
          return WebViewAware(
            child: GestureDetector(
              onTap: () => _model.unfocusNode.canRequestFocus
                  ? FocusScope.of(context).requestFocus(_model.unfocusNode)
                  : FocusScope.of(context).unfocus(),
              child: Padding(
                padding: MediaQuery.viewInsetsOf(context),
                child: Container(
                  height: double.infinity,
                  child: LoadingSceneWidget(),
                ),
              ),
            ),
          );
        },
      ).then((value) => safeSetState(() {}));

      _model.getHideContentTableauDoc =
          await HideInAppContentRecord.getDocumentOnce(
              FFAppState().hideContentTableauDocRef!);
      FFAppState().isOpenAndroidTableauBrowser =
          _model.getHideContentTableauDoc!.isShowContent;
      setState(() {});
      logFirebaseEvent('super_app_page_view_5544');
      _model.getDeviceVersion = await actions.getBuildVersion();
      FFAppState().isSelectedBranch = false;
      FFAppState().isSearchedBranch = false;
      FFAppState().isEmployeeSearched = false;
      FFAppState().isEmployeeSelected = false;
      FFAppState().update(() {});
      FFAppState().isFromTimesheetPage = false;
      FFAppState().leadChannelAmountList =
          functions.resetLeadChannelAmount().toList().cast<int>();
      FFAppState().update(() {});
      FFAppState().leadChannelSelected = 'All';
      FFAppState().update(() {});
      _model.leadNotiOutput = await actions.a14();
      FFAppState().isGotNoti = false;
      FFAppState().update(() {});
      await actions.lockOrientation();
      if (FFAppState().isFromLoginPage) {
        if (FFAppState().isFromSetPinPage) {
          if (!FFAppState().isPassLoginSection) {
            FFAppState().isPassLoginSection = true;
            FFAppState().update(() {});
          }
        } else {
          Navigator.pop(context);

          context.goNamed('SetPinCodePage');

          return;
        }
      } else {
        if (!FFAppState().isFromAuthenPage) {
          Navigator.pop(context);

          context.goNamed('PinCodePage');

          return;
        }
      }

      if (_model.leadNotiOutput != 'notification_message_type') {
        if (FFAppState().inAppViaNotification) {
          await showDialog(
            context: context,
            builder: (alertDialogContext) {
              return WebViewAware(
                child: AlertDialog(
                  content: Text(_model.leadNotiOutput!),
                  actions: [
                    TextButton(
                      onPressed: () => Navigator.pop(alertDialogContext),
                      child: Text('Ok'),
                    ),
                  ],
                ),
              );
            },
          );
          if (_model.leadNotiOutput == 'Leave_Request') {
            FFAppState().inAppViaNotification = false;
            FFAppState().update(() {});
            Navigator.pop(context);

            context.goNamed('DashboardLeavePage');

            return;
          }
          FFAppState().inAppViaNotification = false;
          FFAppState().update(() {});
          Navigator.pop(context);

          context.goNamed('LeadNotiPage');
        } else {
          Navigator.pop(context);
        }

        return;
      }
      if (FFAppState().isInApp) {
        Navigator.pop(context);
        return;
      }
      _model.checkDoNotShowIsEmpty = await actions.a17(
        FFAppState().dateDoNotShowAgain,
      );
      if (_model.checkDoNotShowIsEmpty!) {
        FFAppState().dateDoNotShowAgain = getCurrentTimestamp;
        FFAppState().DateHolidayNotShow = getCurrentTimestamp;
        FFAppState().update(() {});
      }
      _model.checkDoNotShowHoliday = await actions.a18(
        FFAppState().DateHolidayNotShow,
        getCurrentTimestamp,
      );
      if (_model.checkDoNotShowHoliday!) {
        Navigator.pop(context);
      } else {
        if ((FFAppState().DateHoliday! <= getCurrentTimestamp) &&
            (FFAppState().DateExpHoliday! >= getCurrentTimestamp)) {
          Navigator.pop(context);
          await showModalBottomSheet(
            isScrollControlled: true,
            backgroundColor: Colors.transparent,
            barrierColor: Color(0x9A000000),
            enableDrag: false,
            context: context,
            builder: (context) {
              return WebViewAware(
                child: GestureDetector(
                  onTap: () => _model.unfocusNode.canRequestFocus
                      ? FocusScope.of(context).requestFocus(_model.unfocusNode)
                      : FocusScope.of(context).unfocus(),
                  child: Padding(
                    padding: MediaQuery.viewInsetsOf(context),
                    child: Container(
                      height: double.infinity,
                      child: SplashPageHolidayWidget(),
                    ),
                  ),
                ),
              );
            },
          ).then((value) => safeSetState(() {}));
        } else {
          Navigator.pop(context);
        }
      }

      _model.checkDoNotShow = await actions.a18(
        FFAppState().dateDoNotShowAgain,
        getCurrentTimestamp,
      );
      if (_model.checkDoNotShow!) {
        Navigator.pop(context);
        FFAppState().isInApp = true;
        FFAppState().update(() {});
        return;
      }
      await showModalBottomSheet(
        isScrollControlled: true,
        backgroundColor: Colors.transparent,
        barrierColor: Color(0x9A000000),
        enableDrag: false,
        context: context,
        builder: (context) {
          return WebViewAware(
            child: GestureDetector(
              onTap: () => _model.unfocusNode.canRequestFocus
                  ? FocusScope.of(context).requestFocus(_model.unfocusNode)
                  : FocusScope.of(context).unfocus(),
              child: Padding(
                padding: MediaQuery.viewInsetsOf(context),
                child: Container(
                  height: double.infinity,
                  child: SplashPageWidget(),
                ),
              ),
            ),
          );
        },
      ).then((value) => safeSetState(() {}));

      _model.datetimeAPIOutput = await GetDateTimeAPICall.call(
        apiUrl: FFAppState().apiURLLocalState,
        token: valueOrDefault(currentUserDocument?.employeeId, 0) >= 100000
            ? 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMC4xLjI3LjI0OjgwOTBcL3Nzd19hcnVuc2F3YWRfYXBpXC9hcGlcL2xvZ2luIiwiaWF0IjoxNjY4MDcyOTA4LCJuYmYiOjE2NjgwNzI5MDgsImp0aSI6Ildlc0xUOEhBd0x3b0ZlVngiLCJzdWIiOjUwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.VUyLGW6rHPHShsRdyWCUF5euUWkbizCADv8yMIsotfY'
            : FFAppState().accessToken,
      );

      FFAppState().profileInsuExpdateAD = functions
          .stringlistToDateAD(
              FFAppState().profileInsuLicenseExpireDate.toList())!
          .toList()
          .cast<DateTime>();
      setState(() {});
      if (valueOrDefault(currentUserDocument?.employeeId, 0) < 100000) {
        FFAppState().expInsuLessthen30 = functions
            .compareDate30(
                FFAppState().profileInsuExpdateAD.toList(),
                GetDateTimeAPICall.currentDateYMD(
                  (_model.datetimeAPIOutput?.jsonBody ?? ''),
                ).toString())!
            .toList()
            .cast<bool>();
        setState(() {});
      }
      FFAppState().isInApp = true;
      FFAppState().update(() {});
    });

    animationsMap.addAll({
      'iconOnPageLoadAnimation': AnimationInfo(
        trigger: AnimationTrigger.onPageLoad,
        effectsBuilder: () => [
          VisibilityEffect(duration: 1.ms),
          MoveEffect(
            curve: Curves.elasticOut,
            delay: 0.0.ms,
            duration: 900.0.ms,
            begin: Offset(0.0, -57.0),
            end: Offset(0.0, 0.0),
          ),
          FadeEffect(
            curve: Curves.elasticOut,
            delay: 0.0.ms,
            duration: 900.0.ms,
            begin: 0.0,
            end: 1.0,
          ),
        ],
      ),
      'iconButtonOnPageLoadAnimation': AnimationInfo(
        trigger: AnimationTrigger.onPageLoad,
        effectsBuilder: () => [
          VisibilityEffect(duration: 1.ms),
          MoveEffect(
            curve: Curves.elasticOut,
            delay: 0.0.ms,
            duration: 900.0.ms,
            begin: Offset(0.0, -57.0),
            end: Offset(0.0, 0.0),
          ),
          FadeEffect(
            curve: Curves.elasticOut,
            delay: 0.0.ms,
            duration: 900.0.ms,
            begin: 0.0,
            end: 1.0,
          ),
        ],
      ),
    });

    WidgetsBinding.instance.addPostFrameCallback((_) => setState(() {}));
  }

  @override
  void dispose() {
    _model.dispose();

    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    context.watch<FFAppState>();

    return GestureDetector(
      onTap: () => _model.unfocusNode.canRequestFocus
          ? FocusScope.of(context).requestFocus(_model.unfocusNode)
          : FocusScope.of(context).unfocus(),
      child: WillPopScope(
        onWillPop: () async => false,
        child: Scaffold(
          key: scaffoldKey,
          backgroundColor: FlutterFlowTheme.of(context).primaryBtnText,
          drawer: Container(
            width: 240.0,
            child: Drawer(
              elevation: 16.0,
              child: WebViewAware(
                child: Container(
                  width: MediaQuery.sizeOf(context).width * 1.0,
                  height: MediaQuery.sizeOf(context).height * 1.0,
                  decoration: BoxDecoration(
                    color: Color(0xFF261E1E),
                  ),
                  child: Column(
                    mainAxisSize: MainAxisSize.max,
                    children: [
                      Padding(
                        padding:
                            EdgeInsetsDirectional.fromSTEB(0.0, 20.0, 0.0, 0.0),
                        child: Container(
                          width: double.infinity,
                          height: 210.0,
                          decoration: BoxDecoration(),
                          child: Column(
                            mainAxisSize: MainAxisSize.max,
                            children: [
                              Expanded(
                                child: Align(
                                  alignment: AlignmentDirectional(0.0, 0.0),
                                  child: Image.asset(
                                    'assets/images/ArunSawad.png',
                                    width: double.infinity,
                                    height: double.infinity,
                                    fit: BoxFit.contain,
                                  ),
                                ),
                              ),
                              Text(
                                valueOrDefault<String>(
                                  'อรุณสวัสดิ์ Version ${_model.getDeviceVersion}',
                                  'อรุณสวัสดิ์ Version [build_version]',
                                ),
                                style: FlutterFlowTheme.of(context)
                                    .bodyMedium
                                    .override(
                                      fontFamily: 'Poppins',
                                      color: Colors.white,
                                      fontSize: 12.0,
                                      letterSpacing: 0.0,
                                    ),
                              ),
                              Text(
                                valueOrDefault<String>(
                                  isAndroid ? 'Android' : 'iOS',
                                  'Android',
                                ),
                                style: FlutterFlowTheme.of(context)
                                    .bodyMedium
                                    .override(
                                      fontFamily: 'Poppins',
                                      color: Colors.white,
                                      fontSize: 12.0,
                                      letterSpacing: 0.0,
                                    ),
                              ),
                            ],
                          ),
                        ),
                      ),
                      Divider(
                        color: Color(0x80FFFFFF),
                      ),
                      Container(
                        width: double.infinity,
                        height: 50.0,
                        decoration: BoxDecoration(),
                        child: AuthUserStreamWidget(
                          builder: (context) => Text(
                            valueOrDefault(
                                        currentUserDocument?.employeeId, 0) >=
                                    100000
                                ? ''
                                : 'คุณ${FFAppState().userNickname}',
                            textAlign: TextAlign.center,
                            style: FlutterFlowTheme.of(context)
                                .displaySmall
                                .override(
                                  fontFamily: 'Poppins',
                                  color: Colors.white,
                                  letterSpacing: 0.0,
                                ),
                          ),
                        ),
                      ),
                      Container(
                        width: double.infinity,
                        height: 60.0,
                        child: custom_widgets.ShowDateTimeDash(
                          width: double.infinity,
                          height: 60.0,
                          currentTime: getCurrentTimestamp,
                        ),
                      ),
                      Container(
                        width: double.infinity,
                        height: 80.0,
                        child: custom_widgets.ShowTimeDash(
                          width: double.infinity,
                          height: 80.0,
                        ),
                      ),
                      Spacer(flex: 2),
                      if (valueOrDefault(currentUserDocument?.employeeId, 0) >=
                          100000)
                        Expanded(
                          flex: 1,
                          child: AuthUserStreamWidget(
                            builder: (context) => Container(
                              width: double.infinity,
                              height: MediaQuery.sizeOf(context).height * 0.06,
                              decoration: BoxDecoration(),
                              child: Column(
                                mainAxisSize: MainAxisSize.max,
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Align(
                                    alignment: AlignmentDirectional(0.0, 0.0),
                                    child: InkWell(
                                      splashColor: Colors.transparent,
                                      focusColor: Colors.transparent,
                                      hoverColor: Colors.transparent,
                                      highlightColor: Colors.transparent,
                                      onTap: () async {
                                        var confirmDialogResponse =
                                            await showDialog<bool>(
                                                  context: context,
                                                  builder:
                                                      (alertDialogContext) {
                                                    return WebViewAware(
                                                      child: AlertDialog(
                                                        content: Text(
                                                            'คุณต้องการลบแอคเคาร์ใช่หรือไม่'),
                                                        actions: [
                                                          TextButton(
                                                            onPressed: () =>
                                                                Navigator.pop(
                                                                    alertDialogContext,
                                                                    false),
                                                            child:
                                                                Text('ยกเลิก'),
                                                          ),
                                                          TextButton(
                                                            onPressed: () =>
                                                                Navigator.pop(
                                                                    alertDialogContext,
                                                                    true),
                                                            child:
                                                                Text('ยืนยัน'),
                                                          ),
                                                        ],
                                                      ),
                                                    );
                                                  },
                                                ) ??
                                                false;
                                        if (!confirmDialogResponse) {
                                          return;
                                        }
                                        await authManager.deleteUser(context);
                                        FFAppState().loginStateFirebase =
                                            '[loginStateFirebase]';
                                        FFAppState().deleteAccessToken();
                                        FFAppState().accessToken =
                                            'access_token';

                                        FFAppState().update(() {});
                                        FFAppState().deleteEmployeeID();
                                        FFAppState().employeeID = 'employee_id';

                                        FFAppState().QRCodeLink = 'qrcode_link';
                                        FFAppState().update(() {});
                                        FFAppState().deleteApiURLLocalState();
                                        FFAppState().apiURLLocalState =
                                            'api_url_local_state';

                                        FFAppState().deleteBranchCode();
                                        FFAppState().branchCode = 'branch_code';

                                        FFAppState().update(() {});
                                        FFAppState().isFromSetPinPage = false;
                                        FFAppState().leadChannelColor = [];
                                        FFAppState().update(() {});
                                        FFAppState().leadChannelList = [];
                                        FFAppState().isFromLoginPage = false;
                                        FFAppState().update(() {});
                                        FFAppState().deletePinCodeAuthen();
                                        FFAppState().pinCodeAuthen = '013972';

                                        FFAppState().isFromAuthenPage = false;
                                        FFAppState().update(() {});
                                        FFAppState().deleteDateDoNotShowAgain();
                                        FFAppState().dateDoNotShowAgain = null;

                                        FFAppState().deleteDoNotShowAgain();
                                        FFAppState().doNotShowAgain = false;

                                        FFAppState().update(() {});
                                        FFAppState().inAppViaNotification =
                                            true;
                                        FFAppState().isInApp = false;
                                        FFAppState().update(() {});
                                        FFAppState().fcmToken = 'fcm_token';
                                        FFAppState().isPassLoginSection = false;
                                        FFAppState().update(() {});
                                        FFAppState().leadID = [];
                                        FFAppState().leadCreatedTimeList = [];
                                        FFAppState().update(() {});
                                        FFAppState().leadCustomerNameList = [];
                                        FFAppState().leadChannelList = [];
                                        FFAppState().update(() {});
                                        FFAppState().leadChannelColor = [];
                                        FFAppState().leadCallStatus = [];
                                        FFAppState().update(() {});
                                        FFAppState().leadPhoneNumberList = [];
                                        FFAppState().leadEmployeeID = [];
                                        FFAppState().update(() {});
                                        FFAppState().leadChannelLabelColor = [];
                                        FFAppState().deleteLeadIdCalledInApp();
                                        FFAppState().leadIdCalledInApp = [];

                                        FFAppState().update(() {});
                                        FFAppState().leadBranchCode = [];
                                        FFAppState().leadUserLevel =
                                            'lead_user_level';
                                        FFAppState().update(() {});
                                        FFAppState().leadChannelAmountList = [];
                                        FFAppState().update(() {});

                                        context.goNamed('LoginPage');
                                      },
                                      child: ListTile(
                                        title: Text(
                                          'DELETE ACCOUNT',
                                          style: FlutterFlowTheme.of(context)
                                              .headlineSmall
                                              .override(
                                                fontFamily: 'Poppins',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                              ),
                                        ),
                                        trailing: Icon(
                                          Icons.delete,
                                          color: FlutterFlowTheme.of(context)
                                              .alternate,
                                          size: 20.0,
                                        ),
                                        tileColor: FlutterFlowTheme.of(context)
                                            .primary,
                                        dense: false,
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ),
                        ),
                      Expanded(
                        flex: 1,
                        child: Container(
                          width: double.infinity,
                          height: MediaQuery.sizeOf(context).height * 0.06,
                          decoration: BoxDecoration(),
                          child: Column(
                            mainAxisSize: MainAxisSize.max,
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Align(
                                alignment: AlignmentDirectional(0.0, 0.0),
                                child: InkWell(
                                  splashColor: Colors.transparent,
                                  focusColor: Colors.transparent,
                                  hoverColor: Colors.transparent,
                                  highlightColor: Colors.transparent,
                                  onTap: () async {
                                    currentUserLocationValue =
                                        await getCurrentUserLocation(
                                            defaultLocation: LatLng(0.0, 0.0));
                                    var _shouldSetState = false;
                                    HapticFeedback.mediumImpact();
                                    if (!(FFAppState().isFromAuthenPage ||
                                        FFAppState().isFromSetPinPage)) {
                                      Navigator.pop(context);

                                      context.goNamed('PinCodePage');

                                      if (_shouldSetState) setState(() {});
                                      return;
                                    }
                                    showModalBottomSheet(
                                      isScrollControlled: true,
                                      backgroundColor: Colors.transparent,
                                      barrierColor: Color(0x00000000),
                                      context: context,
                                      builder: (context) {
                                        return WebViewAware(
                                          child: GestureDetector(
                                            onTap: () => _model
                                                    .unfocusNode.canRequestFocus
                                                ? FocusScope.of(context)
                                                    .requestFocus(
                                                        _model.unfocusNode)
                                                : FocusScope.of(context)
                                                    .unfocus(),
                                            child: Padding(
                                              padding: MediaQuery.viewInsetsOf(
                                                  context),
                                              child: Container(
                                                height: double.infinity,
                                                child: LoadingSceneWidget(),
                                              ),
                                            ),
                                          ),
                                        );
                                      },
                                    ).then((value) => safeSetState(() {}));

                                    _model.checkDeviceLocSerLogout =
                                        await actions.a1();
                                    _shouldSetState = true;
                                    if (!_model.checkDeviceLocSerLogout!) {
                                      await showDialog(
                                        context: context,
                                        builder: (alertDialogContext) {
                                          return WebViewAware(
                                            child: AlertDialog(
                                              content: Text(
                                                  'กรุณาเปิดGPSเพื่อทำรายการ'),
                                              actions: [
                                                TextButton(
                                                  onPressed: () =>
                                                      Navigator.pop(
                                                          alertDialogContext),
                                                  child: Text('Ok'),
                                                ),
                                              ],
                                            ),
                                          );
                                        },
                                      );
                                      if (_shouldSetState) setState(() {});
                                      return;
                                    }
                                    _model.checkDeviceLocPerLogout =
                                        await actions.a2();
                                    _shouldSetState = true;
                                    if (!_model.checkDeviceLocPerLogout!) {
                                      await showDialog(
                                        context: context,
                                        builder: (alertDialogContext) {
                                          return WebViewAware(
                                            child: AlertDialog(
                                              content: Text(
                                                  'กรุณาให้อรุณสวัสดิ์เข้าถึงGPSของคุณ'),
                                              actions: [
                                                TextButton(
                                                  onPressed: () =>
                                                      Navigator.pop(
                                                          alertDialogContext),
                                                  child: Text('Ok'),
                                                ),
                                              ],
                                            ),
                                          );
                                        },
                                      );
                                      if (_shouldSetState) setState(() {});
                                      return;
                                    }
                                    _model.checkLatLngLogout = await actions.a8(
                                      currentUserLocationValue,
                                    );
                                    _shouldSetState = true;
                                    if (!_model.checkLatLngLogout!) {
                                      await showDialog(
                                        context: context,
                                        builder: (alertDialogContext) {
                                          return WebViewAware(
                                            child: AlertDialog(
                                              content: Text(
                                                  'กรุณาเปิดGPSเพื่อทำรายการ'),
                                              actions: [
                                                TextButton(
                                                  onPressed: () =>
                                                      Navigator.pop(
                                                          alertDialogContext),
                                                  child: Text('Ok'),
                                                ),
                                              ],
                                            ),
                                          );
                                        },
                                      );
                                      if (_shouldSetState) setState(() {});
                                      return;
                                    }

                                    var userLogRecordReference =
                                        UserLogRecord.collection.doc();
                                    await userLogRecordReference
                                        .set(createUserLogRecordData(
                                      employeeId: FFAppState().employeeID,
                                      action: 'Logout',
                                      actionTime: getCurrentTimestamp,
                                      userLocation: currentUserLocationValue,
                                    ));
                                    _model.createdUserLogLogout =
                                        UserLogRecord.getDocumentFromData(
                                            createUserLogRecordData(
                                              employeeId:
                                                  FFAppState().employeeID,
                                              action: 'Logout',
                                              actionTime: getCurrentTimestamp,
                                              userLocation:
                                                  currentUserLocationValue,
                                            ),
                                            userLogRecordReference);
                                    _shouldSetState = true;
                                    FFAppState().loginStateFirebase =
                                        '[loginStateFirebase]';
                                    FFAppState().deleteAccessToken();
                                    FFAppState().accessToken = 'access_token';

                                    FFAppState().update(() {});
                                    FFAppState().deleteEmployeeID();
                                    FFAppState().employeeID = 'employee_id';

                                    FFAppState().QRCodeLink = 'qrcode_link';
                                    FFAppState().update(() {});
                                    FFAppState().deleteApiURLLocalState();
                                    FFAppState().apiURLLocalState =
                                        'api_url_local_state';

                                    FFAppState().deleteBranchCode();
                                    FFAppState().branchCode = 'branch_code';

                                    FFAppState().update(() {});
                                    FFAppState().isFromSetPinPage = false;
                                    FFAppState().leadChannelColor = [];
                                    FFAppState().update(() {});
                                    FFAppState().leadChannelList = [];
                                    FFAppState().isFromLoginPage = false;
                                    FFAppState().update(() {});
                                    FFAppState().deletePinCodeAuthen();
                                    FFAppState().pinCodeAuthen = '013972';

                                    FFAppState().isFromAuthenPage = false;
                                    FFAppState().update(() {});
                                    FFAppState().deleteDateDoNotShowAgain();
                                    FFAppState().dateDoNotShowAgain = null;

                                    FFAppState().deleteDoNotShowAgain();
                                    FFAppState().doNotShowAgain = false;

                                    FFAppState().update(() {});
                                    FFAppState().inAppViaNotification = true;
                                    FFAppState().isInApp = false;
                                    FFAppState().update(() {});
                                    FFAppState().fcmToken = 'fcm_token';
                                    FFAppState().isPassLoginSection = false;
                                    FFAppState().update(() {});
                                    FFAppState().leadID = [];
                                    FFAppState().leadCreatedTimeList = [];
                                    FFAppState().update(() {});
                                    FFAppState().leadCustomerNameList = [];
                                    FFAppState().leadChannelList = [];
                                    FFAppState().update(() {});
                                    FFAppState().leadChannelColor = [];
                                    FFAppState().leadCallStatus = [];
                                    FFAppState().update(() {});
                                    FFAppState().leadPhoneNumberList = [];
                                    FFAppState().leadEmployeeID = [];
                                    FFAppState().update(() {});
                                    FFAppState().leadChannelLabelColor = [];
                                    FFAppState().deleteLeadIdCalledInApp();
                                    FFAppState().leadIdCalledInApp = [];

                                    FFAppState().update(() {});
                                    FFAppState().leadBranchCode = [];
                                    FFAppState().leadUserLevel =
                                        'lead_user_level';
                                    FFAppState().update(() {});
                                    FFAppState().leadChannelAmountList = [];
                                    FFAppState().update(() {});
                                    Navigator.pop(context);
                                    await actions.a22();

                                    context.goNamed('LoginPage');

                                    if (_shouldSetState) setState(() {});
                                  },
                                  child: ListTile(
                                    title: Text(
                                      'ออกจากระบบ',
                                      style: FlutterFlowTheme.of(context)
                                          .headlineSmall
                                          .override(
                                            fontFamily: 'Poppins',
                                            color: Colors.white,
                                            letterSpacing: 0.0,
                                          ),
                                    ),
                                    trailing: FaIcon(
                                      FontAwesomeIcons.signOutAlt,
                                      color: Colors.white,
                                      size: 20.0,
                                    ),
                                    tileColor: Colors.white,
                                    dense: false,
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ),
          ),
          body: SafeArea(
            top: true,
            child: Column(
              mainAxisSize: MainAxisSize.max,
              children: [
                FutureBuilder<UserCustomRecord>(
                  future:
                      UserCustomRecord.getDocumentOnce(FFAppState().userRef!),
                  builder: (context, snapshot) {
                    // Customize what your widget looks like when it's loading.
                    if (!snapshot.hasData) {
                      return Center(
                        child: SizedBox(
                          width: 50.0,
                          height: 50.0,
                          child: CircularProgressIndicator(
                            valueColor: AlwaysStoppedAnimation<Color>(
                              FlutterFlowTheme.of(context).tertiary,
                            ),
                          ),
                        ),
                      );
                    }
                    final containerUserCustomRecord = snapshot.data!;
                    return Container(
                      width: double.infinity,
                      height: 120.0,
                      decoration: BoxDecoration(
                        color: Colors.white,
                      ),
                      child: Stack(
                        children: [
                          if (!FFAppState().expInsuLessthen30.contains(true))
                            Align(
                              alignment: AlignmentDirectional(0.0, -0.2),
                              child: Container(
                                width: MediaQuery.sizeOf(context).width * 0.6,
                                height: 80.0,
                                decoration: BoxDecoration(
                                  image: DecorationImage(
                                    fit: BoxFit.fill,
                                    image: Image.asset(
                                      'assets/images/8czKzxdqi-2.png',
                                    ).image,
                                  ),
                                ),
                                child: Align(
                                  alignment: AlignmentDirectional(0.0, 0.0),
                                  child: Text(
                                    valueOrDefault<String>(
                                      functions.greetingTextSuperApp(
                                          FFAppState().userNickname),
                                      '[greeting_text]',
                                    ),
                                    textAlign: TextAlign.center,
                                    style: FlutterFlowTheme.of(context)
                                        .bodyMedium
                                        .override(
                                          fontFamily: 'Poppins',
                                          color: Colors.white,
                                          letterSpacing: 0.0,
                                        ),
                                  ),
                                ),
                              ),
                            ),
                          Align(
                            alignment: AlignmentDirectional(-0.95, 0.8),
                            child: Container(
                              width: 64.0,
                              height: 64.0,
                              decoration: BoxDecoration(
                                color: FlutterFlowTheme.of(context)
                                    .secondaryBackground,
                                shape: BoxShape.circle,
                              ),
                              child: Container(
                                width: 120.0,
                                height: 120.0,
                                clipBehavior: Clip.antiAlias,
                                decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                ),
                                child: CachedNetworkImage(
                                  fadeInDuration: Duration(milliseconds: 500),
                                  fadeOutDuration: Duration(milliseconds: 500),
                                  imageUrl: valueOrDefault<String>(
                                    containerUserCustomRecord.imgProfile,
                                    'https://firebasestorage.googleapis.com/v0/b/flut-flow-test.appspot.com/o/imageUrlExpired.png?alt=media&token=5a9e3847-91d4-40d4-9a76-97a77d108060',
                                  ),
                                  fit: BoxFit.cover,
                                  errorWidget: (context, error, stackTrace) =>
                                      Image.asset(
                                    'assets/images/error_image.png',
                                    fit: BoxFit.cover,
                                  ),
                                ),
                              ),
                            ),
                          ),
                          Padding(
                            padding: EdgeInsetsDirectional.fromSTEB(
                                20.0, 0.0, 20.0, 0.0),
                            child: Row(
                              mainAxisSize: MainAxisSize.max,
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                InkWell(
                                  splashColor: Colors.transparent,
                                  focusColor: Colors.transparent,
                                  hoverColor: Colors.transparent,
                                  highlightColor: Colors.transparent,
                                  onTap: () async {
                                    scaffoldKey.currentState!.openDrawer();
                                  },
                                  child: Icon(
                                    Icons.dehaze,
                                    color: Color(0xFFFF8700),
                                    size: 30.0,
                                  ),
                                ).animateOnPageLoad(
                                    animationsMap['iconOnPageLoadAnimation']!),
                                StreamBuilder<List<NotificationRecord>>(
                                  stream: queryNotificationRecord(
                                    parent: containerUserCustomRecord.reference,
                                    queryBuilder: (notificationRecord) =>
                                        notificationRecord.where(
                                      'noti_is_read',
                                      isEqualTo: false,
                                    ),
                                  ),
                                  builder: (context, snapshot) {
                                    // Customize what your widget looks like when it's loading.
                                    if (!snapshot.hasData) {
                                      return Center(
                                        child: SizedBox(
                                          width: 50.0,
                                          height: 50.0,
                                          child: CircularProgressIndicator(
                                            valueColor:
                                                AlwaysStoppedAnimation<Color>(
                                              FlutterFlowTheme.of(context)
                                                  .tertiary,
                                            ),
                                          ),
                                        ),
                                      );
                                    }
                                    List<NotificationRecord>
                                        badgeNotificationRecordList =
                                        snapshot.data!;
                                    return badges.Badge(
                                      badgeContent: Text(
                                        badgeNotificationRecordList.length
                                            .toString(),
                                        style: FlutterFlowTheme.of(context)
                                            .bodyMedium
                                            .override(
                                              fontFamily: 'Poppins',
                                              color: Colors.white,
                                              letterSpacing: 0.0,
                                            ),
                                      ),
                                      showBadge:
                                          badgeNotificationRecordList.length >
                                              0,
                                      shape: badges.BadgeShape.circle,
                                      badgeColor: Color(0xFFFF0005),
                                      elevation: 4.0,
                                      padding: EdgeInsets.all(8.0),
                                      position: badges.BadgePosition.topEnd(),
                                      animationType:
                                          badges.BadgeAnimationType.scale,
                                      toAnimate: true,
                                      child: FlutterFlowIconButton(
                                        borderColor: Colors.transparent,
                                        borderRadius: 30.0,
                                        borderWidth: 1.0,
                                        buttonSize: 50.0,
                                        icon: Icon(
                                          Icons.notifications,
                                          color: Color(0xFFFF8700),
                                          size: 40.0,
                                        ),
                                        onPressed: () async {
                                          HapticFeedback.mediumImpact();
                                          if (!(FFAppState().isFromAuthenPage ||
                                              FFAppState().isFromSetPinPage)) {
                                            Navigator.pop(context);

                                            context.goNamed('PinCodePage');

                                            return;
                                          }
                                          if (badgeNotificationRecordList
                                                  .length >
                                              0) {
                                            await actions.batchUpdate(
                                              containerUserCustomRecord
                                                  .reference,
                                            );
                                          }

                                          context.goNamed(
                                              'NotificationDetailPage');
                                        },
                                      ).animateOnPageLoad(animationsMap[
                                          'iconButtonOnPageLoadAnimation']!),
                                    );
                                  },
                                ),
                              ],
                            ),
                          ),
                          if (FFAppState().expInsuLessthen30.contains(true))
                            Align(
                              alignment: AlignmentDirectional(0.0, -0.2),
                              child: Container(
                                width: MediaQuery.sizeOf(context).width * 0.6,
                                height: 100.0,
                                decoration: BoxDecoration(),
                                child: Column(
                                  mainAxisSize: MainAxisSize.max,
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                    if (FFAppState().expInsuLessthen30[0])
                                      Align(
                                        alignment:
                                            AlignmentDirectional(0.0, 0.0),
                                        child: Text(
                                          'บัตรนายหน้าประกันชีวิตจะหมดอายุใน 30 วัน',
                                          textAlign: TextAlign.center,
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Poppins',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                              ),
                                        ),
                                      ),
                                    if (FFAppState().expInsuLessthen30[1])
                                      Align(
                                        alignment:
                                            AlignmentDirectional(0.0, 0.0),
                                        child: Text(
                                          'บัตรนายหน้าประกันวินาศภัยจะหมดอายุใน 30 วัน',
                                          textAlign: TextAlign.center,
                                          style: FlutterFlowTheme.of(context)
                                              .bodyMedium
                                              .override(
                                                fontFamily: 'Poppins',
                                                color:
                                                    FlutterFlowTheme.of(context)
                                                        .alternate,
                                                fontSize: 16.0,
                                                letterSpacing: 0.0,
                                              ),
                                        ),
                                      ),
                                  ],
                                ),
                              ),
                            ),
                        ],
                      ),
                    );
                  },
                ),
                if (responsiveVisibility(
                  context: context,
                  tablet: false,
                  tabletLandscape: false,
                  desktop: false,
                ))
                  Container(
                    width: double.infinity,
                    height: 255.0,
                    decoration: BoxDecoration(
                      color: FlutterFlowTheme.of(context).secondaryBackground,
                    ),
                    child: FutureBuilder<List<ArunSawadImgBannerRecord>>(
                      future: queryArunSawadImgBannerRecordOnce(
                        singleRecord: true,
                      ),
                      builder: (context, snapshot) {
                        // Customize what your widget looks like when it's loading.
                        if (!snapshot.hasData) {
                          return Center(
                            child: SizedBox(
                              width: 50.0,
                              height: 50.0,
                              child: CircularProgressIndicator(
                                valueColor: AlwaysStoppedAnimation<Color>(
                                  FlutterFlowTheme.of(context).tertiary,
                                ),
                              ),
                            ),
                          );
                        }
                        List<ArunSawadImgBannerRecord>
                            pageViewBannerArunSawadImgBannerRecordList =
                            snapshot.data!;
                        // Return an empty Container when the item does not exist.
                        if (snapshot.data!.isEmpty) {
                          return Container();
                        }
                        final pageViewBannerArunSawadImgBannerRecord =
                            pageViewBannerArunSawadImgBannerRecordList
                                    .isNotEmpty
                                ? pageViewBannerArunSawadImgBannerRecordList
                                    .first
                                : null;
                        return Builder(
                          builder: (context) {
                            final bannerImgList =
                                pageViewBannerArunSawadImgBannerRecord?.imgUrl
                                        ?.toList() ??
                                    [];
                            return Container(
                              width: double.infinity,
                              height: 300.0,
                              child: Stack(
                                children: [
                                  Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        0.0, 0.0, 0.0, 40.0),
                                    child: PageView.builder(
                                      controller:
                                          _model.pageViewBannerController ??=
                                              PageController(
                                                  initialPage: max(
                                                      0,
                                                      min(
                                                          0,
                                                          bannerImgList.length -
                                                              1))),
                                      scrollDirection: Axis.horizontal,
                                      itemCount: bannerImgList.length,
                                      itemBuilder:
                                          (context, bannerImgListIndex) {
                                        final bannerImgListItem =
                                            bannerImgList[bannerImgListIndex];
                                        return InkWell(
                                          splashColor: Colors.transparent,
                                          focusColor: Colors.transparent,
                                          hoverColor: Colors.transparent,
                                          highlightColor: Colors.transparent,
                                          onTap: () async {
                                            if ((functions.sortingListByOrder(
                                                        pageViewBannerArunSawadImgBannerRecord
                                                            ?.linkUrl
                                                            ?.toList(),
                                                        pageViewBannerArunSawadImgBannerRecord
                                                            ?.index
                                                            ?.toList())?[
                                                    bannerImgListIndex]) !=
                                                'Hello World') {
                                              if ((functions.sortingBoolListByOrder(
                                                          pageViewBannerArunSawadImgBannerRecord
                                                              ?.isHaveLink
                                                              ?.toList(),
                                                          pageViewBannerArunSawadImgBannerRecord
                                                              ?.index
                                                              ?.toList())?[
                                                      bannerImgListIndex]) !=
                                                  true) {
                                                await launchURL(functions
                                                        .sortingListByOrder(
                                                            pageViewBannerArunSawadImgBannerRecord
                                                                ?.linkUrl
                                                                ?.toList(),
                                                            pageViewBannerArunSawadImgBannerRecord
                                                                ?.index
                                                                ?.toList())![
                                                    bannerImgListIndex]);
                                              } else {
                                                if ((functions.sortingListByOrder(
                                                            pageViewBannerArunSawadImgBannerRecord
                                                                ?.linkUrl
                                                                ?.toList(),
                                                            pageViewBannerArunSawadImgBannerRecord
                                                                ?.index
                                                                ?.toList())?[
                                                        bannerImgListIndex]) ==
                                                    'Bottom Sheet') {
                                                  await showModalBottomSheet(
                                                    isScrollControlled: true,
                                                    backgroundColor:
                                                        Colors.transparent,
                                                    enableDrag: false,
                                                    context: context,
                                                    builder: (context) {
                                                      return WebViewAware(
                                                        child: GestureDetector(
                                                          onTap: () => _model
                                                                  .unfocusNode
                                                                  .canRequestFocus
                                                              ? FocusScope.of(
                                                                      context)
                                                                  .requestFocus(
                                                                      _model
                                                                          .unfocusNode)
                                                              : FocusScope.of(
                                                                      context)
                                                                  .unfocus(),
                                                          child: Padding(
                                                            padding: MediaQuery
                                                                .viewInsetsOf(
                                                                    context),
                                                            child: Container(
                                                              height: double
                                                                  .infinity,
                                                              child:
                                                                  TiktokSplashPageWidget(),
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  ).then((value) =>
                                                      safeSetState(() {}));

                                                  return;
                                                }
                                                await actions
                                                    .openTableauBrowser(
                                                  FFAppState().accessToken,
                                                  functions.sortingListByOrder(
                                                          pageViewBannerArunSawadImgBannerRecord
                                                              ?.linkUrl
                                                              ?.toList(),
                                                          pageViewBannerArunSawadImgBannerRecord
                                                              ?.index
                                                              ?.toList())?[
                                                      bannerImgListIndex],
                                                  FFAppState()
                                                      .isOpenAndroidTableauBrowser,
                                                );
                                              }
                                            }
                                          },
                                          child: OctoImage(
                                            placeholderBuilder: (_) =>
                                                SizedBox.expand(
                                              child: Image(
                                                image: BlurHashImage(functions
                                                        .sortingListByOrder(
                                                            pageViewBannerArunSawadImgBannerRecord
                                                                ?.blurHash
                                                                ?.toList(),
                                                            pageViewBannerArunSawadImgBannerRecord
                                                                ?.index
                                                                ?.toList())![
                                                    bannerImgListIndex]),
                                                fit: BoxFit.cover,
                                              ),
                                            ),
                                            image: CachedNetworkImageProvider(
                                              functions.stringToImgPath(
                                                  functions.sortingListByOrder(
                                                      functions
                                                          .imgPathListToStringList(
                                                              pageViewBannerArunSawadImgBannerRecord
                                                                  ?.imgUrl
                                                                  ?.toList())
                                                          ?.toList(),
                                                      pageViewBannerArunSawadImgBannerRecord
                                                          ?.index
                                                          ?.toList())?[bannerImgListIndex])!,
                                            ),
                                            width: 100.0,
                                            height: 100.0,
                                            fit: BoxFit.fitWidth,
                                          ),
                                        );
                                      },
                                    ),
                                  ),
                                  Align(
                                    alignment: AlignmentDirectional(0.0, 1.0),
                                    child: Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0.0, 0.0, 0.0, 10.0),
                                      child: smooth_page_indicator
                                          .SmoothPageIndicator(
                                        controller: _model
                                                .pageViewBannerController ??=
                                            PageController(
                                                initialPage: max(
                                                    0,
                                                    min(
                                                        0,
                                                        bannerImgList.length -
                                                            1))),
                                        count: bannerImgList.length,
                                        axisDirection: Axis.horizontal,
                                        onDotClicked: (i) async {
                                          await _model.pageViewBannerController!
                                              .animateToPage(
                                            i,
                                            duration:
                                                Duration(milliseconds: 500),
                                            curve: Curves.ease,
                                          );
                                          setState(() {});
                                        },
                                        effect: smooth_page_indicator
                                            .ExpandingDotsEffect(
                                          expansionFactor: 2.0,
                                          spacing: 8.0,
                                          radius: 16.0,
                                          dotWidth: 16.0,
                                          dotHeight: 16.0,
                                          dotColor: Color(0xFF9E9E9E),
                                          activeDotColor: Color(0xFF3F51B5),
                                          paintStyle: PaintingStyle.fill,
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            );
                          },
                        );
                      },
                    ),
                  ),
                if (responsiveVisibility(
                  context: context,
                  phone: false,
                ))
                  Container(
                    width: double.infinity,
                    height: MediaQuery.sizeOf(context).height * 0.36,
                    decoration: BoxDecoration(
                      color: FlutterFlowTheme.of(context).secondaryBackground,
                    ),
                    child: FutureBuilder<List<ArunSawadImgBannerRecord>>(
                      future: queryArunSawadImgBannerRecordOnce(
                        singleRecord: true,
                      ),
                      builder: (context, snapshot) {
                        // Customize what your widget looks like when it's loading.
                        if (!snapshot.hasData) {
                          return Center(
                            child: SizedBox(
                              width: 50.0,
                              height: 50.0,
                              child: CircularProgressIndicator(
                                valueColor: AlwaysStoppedAnimation<Color>(
                                  FlutterFlowTheme.of(context).tertiary,
                                ),
                              ),
                            ),
                          );
                        }
                        List<ArunSawadImgBannerRecord>
                            pageViewArunSawadImgBannerRecordList =
                            snapshot.data!;
                        // Return an empty Container when the item does not exist.
                        if (snapshot.data!.isEmpty) {
                          return Container();
                        }
                        final pageViewArunSawadImgBannerRecord =
                            pageViewArunSawadImgBannerRecordList.isNotEmpty
                                ? pageViewArunSawadImgBannerRecordList.first
                                : null;
                        return Builder(
                          builder: (context) {
                            final bannerImgList =
                                pageViewArunSawadImgBannerRecord?.imgUrl
                                        ?.toList() ??
                                    [];
                            return Container(
                              width: double.infinity,
                              height: 300.0,
                              child: Stack(
                                children: [
                                  Padding(
                                    padding: EdgeInsetsDirectional.fromSTEB(
                                        0.0, 0.0, 0.0, 40.0),
                                    child: PageView.builder(
                                      controller: _model.pageViewController ??=
                                          PageController(
                                              initialPage: max(
                                                  0,
                                                  min(
                                                      0,
                                                      bannerImgList.length -
                                                          1))),
                                      scrollDirection: Axis.horizontal,
                                      itemCount: bannerImgList.length,
                                      itemBuilder:
                                          (context, bannerImgListIndex) {
                                        final bannerImgListItem =
                                            bannerImgList[bannerImgListIndex];
                                        return InkWell(
                                          splashColor: Colors.transparent,
                                          focusColor: Colors.transparent,
                                          hoverColor: Colors.transparent,
                                          highlightColor: Colors.transparent,
                                          onTap: () async {
                                            if ((pageViewArunSawadImgBannerRecord
                                                        ?.linkUrl?[
                                                    bannerImgListIndex]) !=
                                                'Hello World') {
                                              if ((pageViewArunSawadImgBannerRecord
                                                          ?.isHaveLink?[
                                                      bannerImgListIndex]) !=
                                                  true) {
                                                await launchURL(
                                                    pageViewArunSawadImgBannerRecord!
                                                            .linkUrl[
                                                        bannerImgListIndex]);
                                              } else {
                                                await actions
                                                    .openTableauBrowser(
                                                  FFAppState().accessToken,
                                                  pageViewArunSawadImgBannerRecord
                                                          ?.linkUrl?[
                                                      bannerImgListIndex],
                                                  FFAppState()
                                                      .isOpenAndroidTableauBrowser,
                                                );
                                              }
                                            }
                                          },
                                          child: OctoImage(
                                            placeholderBuilder: (_) =>
                                                SizedBox.expand(
                                              child: Image(
                                                image: BlurHashImage(functions
                                                        .sortingListByOrder(
                                                            pageViewArunSawadImgBannerRecord
                                                                ?.blurHash
                                                                ?.toList(),
                                                            pageViewArunSawadImgBannerRecord
                                                                ?.index
                                                                ?.toList())![
                                                    bannerImgListIndex]),
                                                fit: BoxFit.cover,
                                              ),
                                            ),
                                            image: CachedNetworkImageProvider(
                                              functions.stringToImgPath(
                                                  functions.sortingListByOrder(
                                                      functions
                                                          .imgPathListToStringList(
                                                              pageViewArunSawadImgBannerRecord
                                                                  ?.imgUrl
                                                                  ?.toList())
                                                          ?.toList(),
                                                      pageViewArunSawadImgBannerRecord
                                                          ?.index
                                                          ?.toList())?[bannerImgListIndex])!,
                                            ),
                                            width: 100.0,
                                            height: 100.0,
                                            fit: BoxFit.cover,
                                          ),
                                        );
                                      },
                                    ),
                                  ),
                                  Align(
                                    alignment: AlignmentDirectional(0.0, 1.0),
                                    child: Padding(
                                      padding: EdgeInsetsDirectional.fromSTEB(
                                          0.0, 0.0, 0.0, 10.0),
                                      child: smooth_page_indicator
                                          .SmoothPageIndicator(
                                        controller: _model
                                                .pageViewController ??=
                                            PageController(
                                                initialPage: max(
                                                    0,
                                                    min(
                                                        0,
                                                        bannerImgList.length -
                                                            1))),
                                        count: bannerImgList.length,
                                        axisDirection: Axis.horizontal,
                                        onDotClicked: (i) async {
                                          await _model.pageViewController!
                                              .animateToPage(
                                            i,
                                            duration:
                                                Duration(milliseconds: 500),
                                            curve: Curves.ease,
                                          );
                                          setState(() {});
                                        },
                                        effect: smooth_page_indicator
                                            .ExpandingDotsEffect(
                                          expansionFactor: 2.0,
                                          spacing: 8.0,
                                          radius: 16.0,
                                          dotWidth: 16.0,
                                          dotHeight: 16.0,
                                          dotColor: Color(0xFF9E9E9E),
                                          activeDotColor: Color(0xFF3F51B5),
                                          paintStyle: PaintingStyle.fill,
                                        ),
                                      ),
                                    ),
                                  ),
                                ],
                              ),
                            );
                          },
                        );
                      },
                    ),
                  ),
                Expanded(
                  child: Padding(
                    padding:
                        EdgeInsetsDirectional.fromSTEB(0.0, 10.0, 0.0, 0.0),
                    child: FutureBuilder<List<AuthorizationRecord>>(
                      future: queryAuthorizationRecordOnce(
                        queryBuilder: (authorizationRecord) =>
                            authorizationRecord.where(
                          'content_name',
                          isEqualTo: 'kpi_ceo',
                        ),
                        singleRecord: true,
                      ),
                      builder: (context, snapshot) {
                        // Customize what your widget looks like when it's loading.
                        if (!snapshot.hasData) {
                          return Center(
                            child: SizedBox(
                              width: 50.0,
                              height: 50.0,
                              child: CircularProgressIndicator(
                                valueColor: AlwaysStoppedAnimation<Color>(
                                  FlutterFlowTheme.of(context).tertiary,
                                ),
                              ),
                            ),
                          );
                        }
                        List<AuthorizationRecord>
                            containerAuthorizationRecordList = snapshot.data!;
                        // Return an empty Container when the item does not exist.
                        if (snapshot.data!.isEmpty) {
                          return Container();
                        }
                        final containerAuthorizationRecord =
                            containerAuthorizationRecordList.isNotEmpty
                                ? containerAuthorizationRecordList.first
                                : null;
                        return Container(
                          width: double.infinity,
                          height: 800.0,
                          decoration: BoxDecoration(
                            gradient: LinearGradient(
                              colors: [Color(0xFFFF8100), Color(0xFFFFC38A)],
                              stops: [0.0, 1.0],
                              begin: AlignmentDirectional(0.14, -1.0),
                              end: AlignmentDirectional(-0.14, 1.0),
                            ),
                            borderRadius: BorderRadius.only(
                              bottomLeft: Radius.circular(0.0),
                              bottomRight: Radius.circular(0.0),
                              topLeft: Radius.circular(24.0),
                              topRight: Radius.circular(24.0),
                            ),
                          ),
                          child: FutureBuilder<List<AuthorizationRecord>>(
                            future: queryAuthorizationRecordOnce(
                              queryBuilder: (authorizationRecord) =>
                                  authorizationRecord.where(
                                'content_name',
                                isEqualTo: 'kpi_menu',
                              ),
                              singleRecord: true,
                            ),
                            builder: (context, snapshot) {
                              // Customize what your widget looks like when it's loading.
                              if (!snapshot.hasData) {
                                return Center(
                                  child: SizedBox(
                                    width: 50.0,
                                    height: 50.0,
                                    child: CircularProgressIndicator(
                                      valueColor: AlwaysStoppedAnimation<Color>(
                                        FlutterFlowTheme.of(context).tertiary,
                                      ),
                                    ),
                                  ),
                                );
                              }
                              List<AuthorizationRecord>
                                  stackAuthorizationRecordList = snapshot.data!;
                              // Return an empty Container when the item does not exist.
                              if (snapshot.data!.isEmpty) {
                                return Container();
                              }
                              final stackAuthorizationRecord =
                                  stackAuthorizationRecordList.isNotEmpty
                                      ? stackAuthorizationRecordList.first
                                      : null;
                              return Stack(
                                children: [
                                  SingleChildScrollView(
                                    child: Column(
                                      mainAxisSize: MainAxisSize.max,
                                      children: [
                                        if (responsiveVisibility(
                                          context: context,
                                          tablet: false,
                                          tabletLandscape: false,
                                          desktop: false,
                                        ))
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    10.0, 30.0, 10.0, 0.0),
                                            child: FutureBuilder<
                                                List<UserCustomRecord>>(
                                              future: queryUserCustomRecordOnce(
                                                queryBuilder:
                                                    (userCustomRecord) =>
                                                        userCustomRecord.where(
                                                  'employee_id',
                                                  isEqualTo: FFAppState()
                                                              .employeeID !=
                                                          ''
                                                      ? FFAppState().employeeID
                                                      : null,
                                                ),
                                                singleRecord: true,
                                              ),
                                              builder: (context, snapshot) {
                                                // Customize what your widget looks like when it's loading.
                                                if (!snapshot.hasData) {
                                                  return Center(
                                                    child: SizedBox(
                                                      width: 50.0,
                                                      height: 50.0,
                                                      child:
                                                          CircularProgressIndicator(
                                                        valueColor:
                                                            AlwaysStoppedAnimation<
                                                                Color>(
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .tertiary,
                                                        ),
                                                      ),
                                                    ),
                                                  );
                                                }
                                                List<UserCustomRecord>
                                                    containerUserCustomRecordList =
                                                    snapshot.data!;
                                                // Return an empty Container when the item does not exist.
                                                if (snapshot.data!.isEmpty) {
                                                  return Container();
                                                }
                                                final containerUserCustomRecord =
                                                    containerUserCustomRecordList
                                                            .isNotEmpty
                                                        ? containerUserCustomRecordList
                                                            .first
                                                        : null;
                                                return Container(
                                                  width: double.infinity,
                                                  height: 300.0,
                                                  decoration: BoxDecoration(
                                                    color: FlutterFlowTheme.of(
                                                            context)
                                                        .secondaryBackground,
                                                    boxShadow: [
                                                      BoxShadow(
                                                        blurRadius: 4.0,
                                                        color:
                                                            Color(0x33000000),
                                                        offset: Offset(
                                                          0.0,
                                                          2.0,
                                                        ),
                                                      )
                                                    ],
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            12.0),
                                                  ),
                                                  child: Column(
                                                    mainAxisSize:
                                                        MainAxisSize.max,
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .start,
                                                    children: [
                                                      Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    24.0,
                                                                    20.0,
                                                                    0.0,
                                                                    0.0),
                                                        child: InkWell(
                                                          splashColor: Colors
                                                              .transparent,
                                                          focusColor: Colors
                                                              .transparent,
                                                          hoverColor: Colors
                                                              .transparent,
                                                          highlightColor: Colors
                                                              .transparent,
                                                          onTap: () async {
                                                            unawaited(
                                                              () async {}(),
                                                            );
                                                          },
                                                          child: Text(
                                                            'บริการ',
                                                            style: FlutterFlowTheme
                                                                    .of(context)
                                                                .bodyMedium
                                                                .override(
                                                                  fontFamily:
                                                                      'Poppins',
                                                                  fontSize:
                                                                      20.0,
                                                                  letterSpacing:
                                                                      0.0,
                                                                ),
                                                          ),
                                                        ),
                                                      ),
                                                      Divider(
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .grayIcon,
                                                      ),
                                                      Expanded(
                                                        child: Padding(
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      12.0,
                                                                      18.0,
                                                                      12.0,
                                                                      10.0),
                                                          child: FutureBuilder<
                                                              List<
                                                                  RoleMenuRecord>>(
                                                            future:
                                                                queryRoleMenuRecordOnce(
                                                              singleRecord:
                                                                  true,
                                                            ),
                                                            builder: (context,
                                                                snapshot) {
                                                              // Customize what your widget looks like when it's loading.
                                                              if (!snapshot
                                                                  .hasData) {
                                                                return Center(
                                                                  child:
                                                                      SizedBox(
                                                                    width: 50.0,
                                                                    height:
                                                                        50.0,
                                                                    child:
                                                                        CircularProgressIndicator(
                                                                      valueColor:
                                                                          AlwaysStoppedAnimation<
                                                                              Color>(
                                                                        FlutterFlowTheme.of(context)
                                                                            .tertiary,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                );
                                                              }
                                                              List<RoleMenuRecord>
                                                                  gridViewRoleMenuRecordList =
                                                                  snapshot
                                                                      .data!;
                                                              // Return an empty Container when the item does not exist.
                                                              if (snapshot.data!
                                                                  .isEmpty) {
                                                                return Container();
                                                              }
                                                              final gridViewRoleMenuRecord =
                                                                  gridViewRoleMenuRecordList
                                                                          .isNotEmpty
                                                                      ? gridViewRoleMenuRecordList
                                                                          .first
                                                                      : null;
                                                              return GridView(
                                                                padding:
                                                                    EdgeInsets
                                                                        .zero,
                                                                gridDelegate:
                                                                    SliverGridDelegateWithFixedCrossAxisCount(
                                                                  crossAxisCount:
                                                                      2,
                                                                  mainAxisSpacing:
                                                                      5.0,
                                                                  childAspectRatio:
                                                                      1.1,
                                                                ),
                                                                shrinkWrap:
                                                                    true,
                                                                scrollDirection:
                                                                    Axis.horizontal,
                                                                children: [
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          return;
                                                                        }

                                                                        context.goNamed(
                                                                            'DashboardCheckin');
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/google-maps-new-interface1.jpg',
                                                                                  fit: BoxFit.fitHeight,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'เช็คอิน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          enableDrag:
                                                                              false,
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginLeavePage =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginLeavePage?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginLeavePage?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginLeavePage?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginLeavePage?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        _model.bossCheckOutput =
                                                                            await GetBossAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        FFAppState().bossCheckFlag =
                                                                            GetBossAPICall.bossCheck(
                                                                          (_model.bossCheckOutput?.jsonBody ??
                                                                              ''),
                                                                        )!;
                                                                        setState(
                                                                            () {});
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'DashboardLeavePage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            StreamBuilder<List<NotificationRecord>>(
                                                                              stream: queryNotificationRecord(
                                                                                parent: containerUserCustomRecord?.reference,
                                                                                queryBuilder: (notificationRecord) => notificationRecord
                                                                                    .where(
                                                                                      'noti_type',
                                                                                      isEqualTo: 'Leave_Request',
                                                                                    )
                                                                                    .where(
                                                                                      'this_noti_is_read',
                                                                                      isEqualTo: false,
                                                                                    ),
                                                                              ),
                                                                              builder: (context, snapshot) {
                                                                                // Customize what your widget looks like when it's loading.
                                                                                if (!snapshot.hasData) {
                                                                                  return Center(
                                                                                    child: SizedBox(
                                                                                      width: 50.0,
                                                                                      height: 50.0,
                                                                                      child: CircularProgressIndicator(
                                                                                        valueColor: AlwaysStoppedAnimation<Color>(
                                                                                          FlutterFlowTheme.of(context).tertiary,
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                }
                                                                                List<NotificationRecord> badgeNotificationRecordList = snapshot.data!;
                                                                                return badges.Badge(
                                                                                  badgeContent: Text(
                                                                                    badgeNotificationRecordList.length.toString(),
                                                                                    style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                          fontFamily: 'Poppins',
                                                                                          color: Colors.white,
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                  ),
                                                                                  showBadge: badgeNotificationRecordList.length > 0,
                                                                                  shape: badges.BadgeShape.circle,
                                                                                  badgeColor: Color(0xFFFF0005),
                                                                                  elevation: 4.0,
                                                                                  padding: EdgeInsets.all(8.0),
                                                                                  position: badges.BadgePosition.topEnd(),
                                                                                  animationType: badges.BadgeAnimationType.scale,
                                                                                  toAnimate: true,
                                                                                  child: Padding(
                                                                                    padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                    child: Container(
                                                                                      width: 50.0,
                                                                                      height: 50.0,
                                                                                      clipBehavior: Clip.antiAlias,
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                      ),
                                                                                      child: Image.asset(
                                                                                        'assets/images/calender_1.png',
                                                                                        fit: BoxFit.cover,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ),
                                                                            Text(
                                                                              'ขออนุมัติลา',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'GEN E-PA')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_report_base_url',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.reportStorageGenEpaQuery =
                                                                                await queryReportStorageRecordOnce(
                                                                              queryBuilder: (reportStorageRecord) => reportStorageRecord.where(
                                                                                'report_name',
                                                                                isEqualTo: 'gen_epa',
                                                                              ),
                                                                              singleRecord: true,
                                                                            ).then((s) => s.firstOrNull);
                                                                            _shouldSetState =
                                                                                true;
                                                                            Navigator.pop(context);
                                                                            if (FFAppState().profileLevel ==
                                                                                'เขต') {
                                                                              await actions.openTableauBrowser(
                                                                                FFAppState().accessToken,
                                                                                '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageGenEpaQuery?.reportUrl?[1]}',
                                                                                FFAppState().isOpenAndroidTableauBrowser,
                                                                              );
                                                                            } else {
                                                                              if (FFAppState().profileLevel == 'ภาค') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageGenEpaQuery?.reportUrl?.first}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              } else {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageGenEpaQuery?.reportUrl?.last}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              }
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: Colors.white,
                                                                              shape: BoxShape.circle,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: 50.0,
                                                                                    height: 50.0,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/1712632790359.jpg',
                                                                                      fit: BoxFit.cover,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'GEN E-PA',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 12.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        if (true) {
                                                                          context
                                                                              .goNamed('RecordVideoCustomer');
                                                                        } else {
                                                                          _model.queryRecordVideoIsOnWebview =
                                                                              await queryHideInAppContentRecordOnce(
                                                                            queryBuilder: (hideInAppContentRecord) =>
                                                                                hideInAppContentRecord.where(
                                                                              'content_name',
                                                                              isEqualTo: 'record_video_is_on_webview',
                                                                            ),
                                                                            singleRecord:
                                                                                true,
                                                                          ).then((s) => s.firstOrNull);
                                                                          _shouldSetState =
                                                                              true;
                                                                          _model.getWebRecodeVideoUrl =
                                                                              await queryUrlLinkStorageRecordOnce(
                                                                            queryBuilder: (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                              'url_name',
                                                                              isEqualTo: 'web_record_video_url',
                                                                            ),
                                                                            singleRecord:
                                                                                true,
                                                                          ).then((s) => s.firstOrNull);
                                                                          _shouldSetState =
                                                                              true;
                                                                          if (_model
                                                                              .queryRecordVideoIsOnWebview!
                                                                              .isShowContent) {
                                                                            await requestPermission(cameraPermission);
                                                                            if (!(await getPermissionStatus(cameraPermission))) {
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('กรุณาอนุญาตให้อรุณสวัสดิ์ใช้งานกล้อง จึงจะสามารถใช้เมนูบันทึกวิดีโอได้'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            await requestPermission(microphonePermission);
                                                                            if (!(await getPermissionStatus(microphonePermission))) {
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('กรุณาอนุญาตให้อรุณสวัสดิ์ใช้งานไมโครโฟน จึงจะสามารถใช้เมนูบันทึกวิดีโอได้'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }

                                                                            context.goNamed(
                                                                              'RecordVideoWebviewPage',
                                                                              queryParameters: {
                                                                                'webUrl': serializeParam(
                                                                                  _model.getWebRecodeVideoUrl?.urlLink,
                                                                                  ParamType.String,
                                                                                ),
                                                                              }.withoutNulls,
                                                                            );

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await launchURL(_model
                                                                              .getWebRecodeVideoUrl!
                                                                              .urlLink);
                                                                        }

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              Colors.white,
                                                                          shape:
                                                                              BoxShape.circle,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/icons8-video-recording-48.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'บันทึกวีดิโอ (ลูกค้า)',
                                                                              textAlign: TextAlign.center,
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'รายงานรถยึด')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_report_base_url',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.reportStorageImpoundCarQuery =
                                                                                await queryReportStorageRecordOnce(
                                                                              queryBuilder: (reportStorageRecord) => reportStorageRecord.where(
                                                                                'report_name',
                                                                                isEqualTo: 'impound_car',
                                                                              ),
                                                                              singleRecord: true,
                                                                            ).then((s) => s.firstOrNull);
                                                                            _shouldSetState =
                                                                                true;
                                                                            Navigator.pop(context);
                                                                            await actions.openTableauBrowser(
                                                                              FFAppState().accessToken,
                                                                              '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageImpoundCarQuery?.reportUrl?.first}',
                                                                              FFAppState().isOpenAndroidTableauBrowser,
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: Colors.white,
                                                                              shape: BoxShape.circle,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: 50.0,
                                                                                    height: 50.0,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/Group-7891.png',
                                                                                      fit: BoxFit.fitWidth,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'รายงานรถยึด',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 12.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'โครงการ ZUVศษ')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_report_base_url',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.reportStorageZUVQuery =
                                                                                await queryReportStorageRecordOnce(
                                                                              queryBuilder: (reportStorageRecord) => reportStorageRecord.where(
                                                                                'report_name',
                                                                                isEqualTo: 'ZUV',
                                                                              ),
                                                                              singleRecord: true,
                                                                            ).then((s) => s.firstOrNull);
                                                                            _shouldSetState =
                                                                                true;
                                                                            Navigator.pop(context);
                                                                            if (FFAppState().profileLevel ==
                                                                                'เขต') {
                                                                              await actions.openTableauBrowser(
                                                                                FFAppState().accessToken,
                                                                                '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageZUVQuery?.reportUrl?.first}',
                                                                                FFAppState().isOpenAndroidTableauBrowser,
                                                                              );
                                                                            } else {
                                                                              if (FFAppState().profileLevel == 'ภาค') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageZUVQuery?.reportUrl?[1]}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              } else {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageZUVQuery?.reportUrl?.last}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              }
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: Colors.white,
                                                                              shape: BoxShape.circle,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: 50.0,
                                                                                    height: 50.0,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/ZUV-Logo.png',
                                                                                      fit: BoxFit.cover,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'โครงการ ZUVศษ',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 12.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (!FFAppState()
                                                                            .insuranceRequestIsLoadedData) {
                                                                          showModalBottomSheet(
                                                                            isScrollControlled:
                                                                                true,
                                                                            backgroundColor:
                                                                                Colors.transparent,
                                                                            barrierColor:
                                                                                Color(0x00000000),
                                                                            enableDrag:
                                                                                false,
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (context) {
                                                                              return WebViewAware(
                                                                                child: GestureDetector(
                                                                                  onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                  child: Padding(
                                                                                    padding: MediaQuery.viewInsetsOf(context),
                                                                                    child: Container(
                                                                                      height: double.infinity,
                                                                                      child: LoadingSceneWidget(),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            },
                                                                          ).then((value) =>
                                                                              safeSetState(() {}));

                                                                          _model.gerBrand =
                                                                              await TeleGetBrandAPICall.call(
                                                                            apiUrl:
                                                                                FFAppState().apiURLLocalState,
                                                                          );

                                                                          _shouldSetState =
                                                                              true;
                                                                          if ((_model.gerBrand?.statusCode ?? 200) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.gerBrand?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          if (TeleGetBrandAPICall.statusLevel1(
                                                                                (_model.gerBrand?.jsonBody ?? ''),
                                                                              ) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${TeleGetBrandAPICall.statusLevel1(
                                                                                      (_model.gerBrand?.jsonBody ?? ''),
                                                                                    )?.toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          FFAppState()
                                                                              .insuranceBasicBrandIdList = TeleGetBrandAPICall.brandID(
                                                                            (_model.gerBrand?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicBrandNameList = TeleGetBrandAPICall.brandName(
                                                                            (_model.gerBrand?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          _model.getModel =
                                                                              await TeleGetModelAPICall.call(
                                                                            apiUrl:
                                                                                FFAppState().apiURLLocalState,
                                                                          );

                                                                          _shouldSetState =
                                                                              true;
                                                                          if ((_model.getModel?.statusCode ?? 200) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.getModel?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          if (TeleGetModelAPICall.statusLevel1(
                                                                                (_model.getModel?.jsonBody ?? ''),
                                                                              ) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${TeleGetModelAPICall.statusLevel1(
                                                                                      (_model.getModel?.jsonBody ?? ''),
                                                                                    )?.toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          FFAppState()
                                                                              .insuranceBasicModelIdListOriginal = TeleGetModelAPICall.modelCode(
                                                                            (_model.getModel?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicModelNameListOriginal = TeleGetModelAPICall.modelName(
                                                                            (_model.getModel?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .insuranceBasicModelBrandIdListOriginal = TeleGetModelAPICall.brandID(
                                                                            (_model.getModel?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          _model.getProvince =
                                                                              await TeleGetProvinceAPICall.call(
                                                                            apiUrl:
                                                                                FFAppState().apiURLLocalState,
                                                                          );

                                                                          _shouldSetState =
                                                                              true;
                                                                          if ((_model.getProvince?.statusCode ?? 200) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.getProvince?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          if (TeleGetProvinceAPICall.statusLevel1(
                                                                                (_model.getProvince?.jsonBody ?? ''),
                                                                              ) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${TeleGetProvinceAPICall.statusLevel1(
                                                                                      (_model.getProvince?.jsonBody ?? ''),
                                                                                    )?.toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          FFAppState()
                                                                              .insuranceBasicProvinceIdList = TeleGetProvinceAPICall.provinceID(
                                                                            (_model.getProvince?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicProvinceNameList = TeleGetProvinceAPICall.provinceNameTH(
                                                                            (_model.getProvince?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          _model.getVehicle =
                                                                              await InsuranceRequestGetVehicleAPICall.call(
                                                                            apiUrl:
                                                                                FFAppState().apiURLLocalState,
                                                                          );

                                                                          _shouldSetState =
                                                                              true;
                                                                          if ((_model.getVehicle?.statusCode ?? 200) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.getVehicle?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          if (InsuranceRequestGetVehicleAPICall.statusLayer1(
                                                                                (_model.getVehicle?.jsonBody ?? ''),
                                                                              ) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${InsuranceRequestGetVehicleAPICall.statusLayer1(
                                                                                      (_model.getVehicle?.jsonBody ?? ''),
                                                                                    )?.toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          FFAppState()
                                                                              .insuranceBasicVehicleUsedTypeIdList = InsuranceRequestGetVehicleAPICall.vehicleId(
                                                                            (_model.getVehicle?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicVehicleUsedTypeNameList = InsuranceRequestGetVehicleAPICall.vehicleName(
                                                                            (_model.getVehicle?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicVehicleUsedTypeTypeList = InsuranceRequestGetVehicleAPICall.vehicletype(
                                                                            (_model.getVehicle?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicVehicleUsedTypeCodeList = InsuranceRequestGetVehicleAPICall.vehicleCode(
                                                                            (_model.getVehicle?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          setState(
                                                                              () {});
                                                                          _model.getInsurer =
                                                                              await InsuranceRequestGetInsurerAPICall.call(
                                                                            apiUrl:
                                                                                FFAppState().apiURLLocalState,
                                                                          );

                                                                          _shouldSetState =
                                                                              true;
                                                                          if ((_model.getInsurer?.statusCode ?? 200) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.getInsurer?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          if (InsuranceRequestGetInsurerAPICall.statusLayer1(
                                                                                (_model.getInsurer?.jsonBody ?? ''),
                                                                              ) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${InsuranceRequestGetInsurerAPICall.statusLayer1(
                                                                                      (_model.getInsurer?.jsonBody ?? ''),
                                                                                    )?.toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          FFAppState()
                                                                              .insuranceBasicInsurerIdList = InsuranceRequestGetInsurerAPICall.companyId(
                                                                            (_model.getInsurer?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicInsurerCodeList = InsuranceRequestGetInsurerAPICall.companyCode(
                                                                            (_model.getInsurer?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicInsurerShortNameList = InsuranceRequestGetInsurerAPICall.companyShortName(
                                                                            (_model.getInsurer?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicInsurerFullNameList = InsuranceRequestGetInsurerAPICall.companyFullName(
                                                                            (_model.getInsurer?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicInsurerListNameList = InsuranceRequestGetInsurerAPICall.companyListName(
                                                                            (_model.getInsurer?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .map((e) => e.toString())
                                                                              .toList()
                                                                              .cast<String>();
                                                                          setState(
                                                                              () {});
                                                                          _model.getCoverType =
                                                                              await TeleGetCoverTypeAPICall.call(
                                                                            apiUrl:
                                                                                FFAppState().apiURLLocalState,
                                                                          );

                                                                          _shouldSetState =
                                                                              true;
                                                                          if ((_model.getCoverType?.statusCode ?? 200) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.getCoverType?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          if (TeleGetCoverTypeAPICall.statusLevel1(
                                                                                (_model.getCoverType?.jsonBody ?? ''),
                                                                              ) !=
                                                                              200) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${TeleGetCoverTypeAPICall.statusLevel1(
                                                                                      (_model.getCoverType?.jsonBody ?? ''),
                                                                                    )?.toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          FFAppState()
                                                                              .insuranceBasicCoverTypeIdList = TeleGetCoverTypeAPICall.coverTypeId(
                                                                            (_model.getCoverType?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicCoverTypeCodeList = TeleGetCoverTypeAPICall.coverTypeCode(
                                                                            (_model.getCoverType?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          FFAppState()
                                                                              .insuranceBasicCoverTypeNameList = TeleGetCoverTypeAPICall.coverTypeName(
                                                                            (_model.getCoverType?.jsonBody ??
                                                                                ''),
                                                                          )!
                                                                              .toList()
                                                                              .cast<String>();
                                                                          setState(
                                                                              () {});
                                                                          FFAppState().insuranceRequestIsLoadedData =
                                                                              true;
                                                                          setState(
                                                                              () {});
                                                                          Navigator.pop(
                                                                              context);
                                                                        }

                                                                        context.goNamed(
                                                                            'InsuranceRequestDashboardPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/Screenshot_2566-08-02_at_23.36.22.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ประกันนอกเรท',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'รายงาน BSI')!)
                                                                    Container(
                                                                      decoration:
                                                                          BoxDecoration(),
                                                                      child:
                                                                          InkWell(
                                                                        splashColor:
                                                                            Colors.transparent,
                                                                        focusColor:
                                                                            Colors.transparent,
                                                                        hoverColor:
                                                                            Colors.transparent,
                                                                        highlightColor:
                                                                            Colors.transparent,
                                                                        onTap:
                                                                            () async {
                                                                          HapticFeedback
                                                                              .mediumImpact();
                                                                          if (!(FFAppState().isFromAuthenPage ||
                                                                              FFAppState().isFromSetPinPage)) {
                                                                            Navigator.pop(context);

                                                                            context.goNamed('PinCodePage');

                                                                            return;
                                                                          }

                                                                          context
                                                                              .goNamed('BsiReportPage');
                                                                        },
                                                                        child:
                                                                            Container(
                                                                          width:
                                                                              100.0,
                                                                          height:
                                                                              100.0,
                                                                          decoration:
                                                                              BoxDecoration(
                                                                            color:
                                                                                Colors.white,
                                                                            shape:
                                                                                BoxShape.circle,
                                                                          ),
                                                                          child:
                                                                              Column(
                                                                            mainAxisSize:
                                                                                MainAxisSize.max,
                                                                            children: [
                                                                              Padding(
                                                                                padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                child: Container(
                                                                                  width: 50.0,
                                                                                  height: 50.0,
                                                                                  clipBehavior: Clip.antiAlias,
                                                                                  decoration: BoxDecoration(
                                                                                    shape: BoxShape.circle,
                                                                                  ),
                                                                                  child: Image.asset(
                                                                                    'assets/images/earning.png',
                                                                                    fit: BoxFit.cover,
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                              Text(
                                                                                'รายงาน BSI',
                                                                                style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                      fontFamily: 'Poppins',
                                                                                      fontSize: 12.0,
                                                                                      letterSpacing: 0.0,
                                                                                    ),
                                                                              ),
                                                                            ],
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'เป้า/ผลงาน')!)
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          return;
                                                                        }
                                                                        if (functions.checkIsHaveThisValueInList(
                                                                            containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                            FFAppState().employeeID)!) {
                                                                          await showModalBottomSheet(
                                                                            isScrollControlled:
                                                                                true,
                                                                            backgroundColor:
                                                                                Colors.transparent,
                                                                            barrierColor:
                                                                                Color(0x00000000),
                                                                            isDismissible:
                                                                                false,
                                                                            enableDrag:
                                                                                false,
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (context) {
                                                                              return WebViewAware(
                                                                                child: GestureDetector(
                                                                                  onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                  child: Padding(
                                                                                    padding: MediaQuery.viewInsetsOf(context),
                                                                                    child: Container(
                                                                                      height: MediaQuery.sizeOf(context).height * 0.6,
                                                                                      child: SearchEmployeeComponentWidget(
                                                                                        tableauUrlLink: 'www.google.co.th',
                                                                                        fromPage: 'เป้า/ผลงาน',
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            },
                                                                          ).then((value) =>
                                                                              safeSetState(() {}));

                                                                          return;
                                                                        }

                                                                        context
                                                                            .goNamed(
                                                                          'IBSReport',
                                                                          queryParameters:
                                                                              {
                                                                            'employeeId':
                                                                                serializeParam(
                                                                              FFAppState().employeeID,
                                                                              ParamType.String,
                                                                            ),
                                                                          }.withoutNulls,
                                                                        );
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              Colors.white,
                                                                          shape:
                                                                              BoxShape.circle,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/Pngtreegolden_trophy_cup_icon_cartoon_5207510.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'เป้า/ผลงาน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'KPI')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo: FFAppState().profileLevel == 'ภาค'
                                                                              ? 'tableau_url_link'
                                                                              : 'tableau_area_url_link' != ''
                                                                                  ? FFAppState().profileLevel == 'ภาค'
                                                                                      ? 'tableau_url_link'
                                                                                      : 'tableau_area_url_link'
                                                                                  : null,
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginKPI =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginKPI?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPI?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPI?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginKPI?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            if (functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('EmployeeKpiCEOPage');
                                                                            } else {
                                                                              Navigator.pop(context);
                                                                              if (FFAppState().profileLevel == 'ภาค') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  containerUrlLinkStorageRecord?.urlLink,
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              if (FFAppState().profileLevel == 'เขต') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  containerUrlLinkStorageRecord?.urlLink,
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }

                                                                              context.goNamed('EmployeeKPIPage');
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: 50.0,
                                                                                    height: 50.0,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/icon_kpi.jpg',
                                                                                      fit: BoxFit.contain,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'KPI',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 12.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'ยอดจัดสาขา')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            AuthorizationRecord>>(
                                                                      future:
                                                                          queryAuthorizationRecordOnce(
                                                                        queryBuilder:
                                                                            (authorizationRecord) =>
                                                                                authorizationRecord.where(
                                                                          'content_name',
                                                                          isEqualTo:
                                                                              'welfare_kpi_ceo',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<AuthorizationRecord>
                                                                            containerWelfareAuthorizationRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final containerWelfareAuthorizationRecord = containerWelfareAuthorizationRecordList.isNotEmpty
                                                                            ? containerWelfareAuthorizationRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginKPIWelfare =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginKPIWelfare?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPIWelfare?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPIWelfare?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginKPIWelfare?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            if (functions.checkIsHaveThisValueInList(containerWelfareAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('WelfareKPICEOPage');
                                                                            } else {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('WelfareKPIPage');
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: 50.0,
                                                                                    height: 50.0,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/KPI.jpg',
                                                                                      fit: BoxFit.contain,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'ยอดจัดสาขา',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 12.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดประกัน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดประกัน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดประกัน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดประกัน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID))
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo: functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(), FFAppState().employeeID)!
                                                                              ? 'tableau_thaipaiboon_ceo'
                                                                              : 'tableau_thaipaiboon' != ''
                                                                                  ? functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(), FFAppState().employeeID)!
                                                                                      ? 'tableau_thaipaiboon_ceo'
                                                                                      : 'tableau_thaipaiboon'
                                                                                  : null,
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginThaiPaiboon =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginThaiPaiboon?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginThaiPaiboon?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginThaiPaiboon?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginThaiPaiboon?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            Navigator.pop(context);
                                                                            if (functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              await showModalBottomSheet(
                                                                                isScrollControlled: true,
                                                                                backgroundColor: Colors.transparent,
                                                                                barrierColor: Color(0x00000000),
                                                                                isDismissible: false,
                                                                                enableDrag: false,
                                                                                context: context,
                                                                                builder: (context) {
                                                                                  return WebViewAware(
                                                                                    child: GestureDetector(
                                                                                      onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                      child: Padding(
                                                                                        padding: MediaQuery.viewInsetsOf(context),
                                                                                        child: Container(
                                                                                          height: MediaQuery.sizeOf(context).height * 0.6,
                                                                                          child: SearchEmployeeComponentWidget(
                                                                                            tableauUrlLink: containerUrlLinkStorageRecord?.urlLink,
                                                                                            fromPage: 'ยอดประกัน',
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              ).then((value) => safeSetState(() {}));
                                                                            } else {
                                                                              await actions.openTableauBrowser(
                                                                                FFAppState().accessToken,
                                                                                containerUrlLinkStorageRecord?.urlLink,
                                                                                FFAppState().isOpenAndroidTableauBrowser,
                                                                              );
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: 50.0,
                                                                                    height: 50.0,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/tpb.jpeg',
                                                                                      fit: BoxFit.contain,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'ยอดประกัน',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 12.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          '%ความสำเร็จ')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_daily_new_loan',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginPercentSuccess =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginPercentSuccess?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginPercentSuccess?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginPercentSuccess?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginPercentSuccess?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            if (functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              Navigator.pop(context);
                                                                              var confirmDialogResponse = await showDialog<bool>(
                                                                                    context: context,
                                                                                    builder: (alertDialogContext) {
                                                                                      return WebViewAware(
                                                                                        child: AlertDialog(
                                                                                          content: Text('ต้องการจะดูรายงาน % ความสำเร็จแบบใด'),
                                                                                          actions: [
                                                                                            TextButton(
                                                                                              onPressed: () => Navigator.pop(alertDialogContext, false),
                                                                                              child: Text('ภาค'),
                                                                                            ),
                                                                                            TextButton(
                                                                                              onPressed: () => Navigator.pop(alertDialogContext, true),
                                                                                              child: Text('เขต'),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      );
                                                                                    },
                                                                                  ) ??
                                                                                  false;
                                                                              if (confirmDialogResponse) {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Area',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              } else {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Region',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              }
                                                                            } else {
                                                                              Navigator.pop(context);
                                                                              if ((FFAppState().profileLevel == 'ภาค') || gridViewRoleMenuRecord!.empAdmin.contains(FFAppState().employeeID)) {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Region',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              if (FFAppState().profileLevel == 'เขต') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Area',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: 50.0,
                                                                                    height: 50.0,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/Untitled-1123213213123.png',
                                                                                      fit: BoxFit.contain,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  '%ความสำเร็จ',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 12.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginCheckLead =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginCheckLead?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginCheckLead?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginCheckLead?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginCheckLead?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        await actions
                                                                            .batchUpdate2(
                                                                          containerUserCustomRecord
                                                                              ?.reference,
                                                                          'Lead',
                                                                        );
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'LeadNotiPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            StreamBuilder<List<NotificationRecord>>(
                                                                              stream: queryNotificationRecord(
                                                                                parent: containerUserCustomRecord?.reference,
                                                                                queryBuilder: (notificationRecord) => notificationRecord
                                                                                    .where(
                                                                                      'noti_type',
                                                                                      isEqualTo: 'Lead',
                                                                                    )
                                                                                    .where(
                                                                                      'this_noti_is_read',
                                                                                      isEqualTo: false,
                                                                                    ),
                                                                              ),
                                                                              builder: (context, snapshot) {
                                                                                // Customize what your widget looks like when it's loading.
                                                                                if (!snapshot.hasData) {
                                                                                  return Center(
                                                                                    child: SizedBox(
                                                                                      width: 50.0,
                                                                                      height: 50.0,
                                                                                      child: CircularProgressIndicator(
                                                                                        valueColor: AlwaysStoppedAnimation<Color>(
                                                                                          FlutterFlowTheme.of(context).tertiary,
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                }
                                                                                List<NotificationRecord> badgeNotificationRecordList = snapshot.data!;
                                                                                return badges.Badge(
                                                                                  badgeContent: Text(
                                                                                    badgeNotificationRecordList.length.toString(),
                                                                                    style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                          fontFamily: 'Poppins',
                                                                                          color: Colors.white,
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                  ),
                                                                                  showBadge: badgeNotificationRecordList.length > 0,
                                                                                  shape: badges.BadgeShape.circle,
                                                                                  badgeColor: Color(0xFFFF0000),
                                                                                  elevation: 4.0,
                                                                                  padding: EdgeInsets.all(8.0),
                                                                                  position: badges.BadgePosition.topEnd(),
                                                                                  animationType: badges.BadgeAnimationType.scale,
                                                                                  toAnimate: true,
                                                                                  child: Padding(
                                                                                    padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                    child: Container(
                                                                                      width: 50.0,
                                                                                      height: 50.0,
                                                                                      clipBehavior: Clip.antiAlias,
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                      ),
                                                                                      child: Image.asset(
                                                                                        'assets/images/webpc-passthru.webp',
                                                                                        fit: BoxFit.fitHeight,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ),
                                                                            Text(
                                                                              'รายชื่อลีด',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginInsurance =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginInsurance?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginInsurance?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginInsurance?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginInsurance?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'CheckInsurancePage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/2022-11-03_10-22-14.jpg',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'เช็คเบี้ยประกัน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        currentUserLocationValue =
                                                                            await getCurrentUserLocation(defaultLocation: LatLng(0.0, 0.0));
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginBranchView =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginBranchView?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginBranchView?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginBranchView?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginBranchView?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }

                                                                        var userLogRecordReference = UserLogRecord
                                                                            .collection
                                                                            .doc();
                                                                        await userLogRecordReference
                                                                            .set(createUserLogRecordData(
                                                                          employeeId:
                                                                              FFAppState().employeeID,
                                                                          action:
                                                                              'Branch_View',
                                                                          actionTime:
                                                                              getCurrentTimestamp,
                                                                          userLocation:
                                                                              currentUserLocationValue,
                                                                        ));
                                                                        _model.createUserLogBranchView = UserLogRecord.getDocumentFromData(
                                                                            createUserLogRecordData(
                                                                              employeeId: FFAppState().employeeID,
                                                                              action: 'Branch_View',
                                                                              actionTime: getCurrentTimestamp,
                                                                              userLocation: currentUserLocationValue,
                                                                            ),
                                                                            userLogRecordReference);
                                                                        _shouldSetState =
                                                                            true;
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'Dashboard');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/favicon-196.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'Branch View',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'QR พนักงาน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'QR พนักงาน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'QR พนักงาน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'QR พนักงาน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginQR =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginQR?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginQR?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginQR?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginQR?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'GenQRPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.network(
                                                                                  'https://th.qr-code-generator.com/wp-content/themes/qr/new_structure/markets/basic_market/generator/dist/generator/assets/images/websiteQRCode_noFrame.png',
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'QR พนักงาน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginSaleskit =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginSaleskit?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginSaleskit?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginSaleskit?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginSaleskit?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'SaleskitPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/278-2784993_transparent-people-reading-png-sale-man-logo-png.png',
                                                                                  fit: BoxFit.contain,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'Saleskit',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginFormLead =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginFormLead?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginFormLead?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginFormLead?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginFormLead?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'LeadSurveyRegisPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/istock_blossomstar_survey.jpg',
                                                                                  fit: BoxFit.fitHeight,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ฟอร์มลีด',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginPromotion =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginPromotion?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginPromotion?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginPromotion?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginPromotion?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'PromotionPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/promo.png',
                                                                                  fit: BoxFit.contain,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'โปรโมชั่น',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        currentUserLocationValue =
                                                                            await getCurrentUserLocation(defaultLocation: LatLng(0.0, 0.0));
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginCoach =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginCoach?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginCoach?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginCoach?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginCoach?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }

                                                                        var userLogRecordReference = UserLogRecord
                                                                            .collection
                                                                            .doc();
                                                                        await userLogRecordReference
                                                                            .set(createUserLogRecordData(
                                                                          employeeId:
                                                                              FFAppState().employeeID,
                                                                          action:
                                                                              'COACH',
                                                                          actionTime:
                                                                              getCurrentTimestamp,
                                                                          userLocation:
                                                                              currentUserLocationValue,
                                                                        ));
                                                                        _model.createdUserLogCoach = UserLogRecord.getDocumentFromData(
                                                                            createUserLogRecordData(
                                                                              employeeId: FFAppState().employeeID,
                                                                              action: 'COACH',
                                                                              actionTime: getCurrentTimestamp,
                                                                              userLocation: currentUserLocationValue,
                                                                            ),
                                                                            userLogRecordReference);
                                                                        _shouldSetState =
                                                                            true;
                                                                        Navigator.pop(
                                                                            context);
                                                                        await launchURL(
                                                                            'https://hris.srisawadpower.com/COACH');
                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/Screenshot_2022-10-17_095012.png',
                                                                                  fit: BoxFit.fitHeight,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'COACH',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginClassroom =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginClassroom?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginClassroom?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginClassroom?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginClassroom?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'ClassroomPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/ingenuity_wit_book_idea_light_bulb_learn_learning_icon_149691.png',
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ห้องเรียนทันใจ',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginITSupport =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginITSupport?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginITSupport?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginITSupport?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginITSupport?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'ITSupportPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: 50.0,
                                                                                height: 50.0,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/9288ca8e4f66c009d35e4cd5b409710a.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ข้อมูลไอที',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 12.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                ],
                                                              );
                                                            },
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                );
                                              },
                                            ),
                                          ),
                                        if (responsiveVisibility(
                                          context: context,
                                          phone: false,
                                        ))
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    10.0, 30.0, 10.0, 0.0),
                                            child: FutureBuilder<
                                                List<UserCustomRecord>>(
                                              future: queryUserCustomRecordOnce(
                                                queryBuilder:
                                                    (userCustomRecord) =>
                                                        userCustomRecord.where(
                                                  'employee_id',
                                                  isEqualTo: FFAppState()
                                                              .employeeID !=
                                                          ''
                                                      ? FFAppState().employeeID
                                                      : null,
                                                ),
                                                singleRecord: true,
                                              ),
                                              builder: (context, snapshot) {
                                                // Customize what your widget looks like when it's loading.
                                                if (!snapshot.hasData) {
                                                  return Center(
                                                    child: SizedBox(
                                                      width: 50.0,
                                                      height: 50.0,
                                                      child:
                                                          CircularProgressIndicator(
                                                        valueColor:
                                                            AlwaysStoppedAnimation<
                                                                Color>(
                                                          FlutterFlowTheme.of(
                                                                  context)
                                                              .tertiary,
                                                        ),
                                                      ),
                                                    ),
                                                  );
                                                }
                                                List<UserCustomRecord>
                                                    containerUserCustomRecordList =
                                                    snapshot.data!;
                                                // Return an empty Container when the item does not exist.
                                                if (snapshot.data!.isEmpty) {
                                                  return Container();
                                                }
                                                final containerUserCustomRecord =
                                                    containerUserCustomRecordList
                                                            .isNotEmpty
                                                        ? containerUserCustomRecordList
                                                            .first
                                                        : null;
                                                return Container(
                                                  width: double.infinity,
                                                  height: 530.0,
                                                  decoration: BoxDecoration(
                                                    color: FlutterFlowTheme.of(
                                                            context)
                                                        .secondaryBackground,
                                                    boxShadow: [
                                                      BoxShadow(
                                                        blurRadius: 4.0,
                                                        color:
                                                            Color(0x33000000),
                                                        offset: Offset(
                                                          0.0,
                                                          2.0,
                                                        ),
                                                      )
                                                    ],
                                                    borderRadius:
                                                        BorderRadius.circular(
                                                            12.0),
                                                  ),
                                                  child: Column(
                                                    mainAxisSize:
                                                        MainAxisSize.max,
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .start,
                                                    children: [
                                                      Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    24.0,
                                                                    20.0,
                                                                    0.0,
                                                                    0.0),
                                                        child: Text(
                                                          'บริการ',
                                                          style: FlutterFlowTheme
                                                                  .of(context)
                                                              .bodyMedium
                                                              .override(
                                                                fontFamily:
                                                                    'Poppins',
                                                                fontSize: 32.0,
                                                                letterSpacing:
                                                                    0.0,
                                                              ),
                                                        ),
                                                      ),
                                                      Divider(
                                                        color:
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .grayIcon,
                                                      ),
                                                      Container(
                                                        width: double.infinity,
                                                        height: 500.0,
                                                        decoration:
                                                            BoxDecoration(
                                                          color: FlutterFlowTheme
                                                                  .of(context)
                                                              .secondaryBackground,
                                                        ),
                                                        child: Padding(
                                                          padding:
                                                              EdgeInsetsDirectional
                                                                  .fromSTEB(
                                                                      12.0,
                                                                      18.0,
                                                                      12.0,
                                                                      10.0),
                                                          child: FutureBuilder<
                                                              List<
                                                                  RoleMenuRecord>>(
                                                            future:
                                                                queryRoleMenuRecordOnce(
                                                              singleRecord:
                                                                  true,
                                                            ),
                                                            builder: (context,
                                                                snapshot) {
                                                              // Customize what your widget looks like when it's loading.
                                                              if (!snapshot
                                                                  .hasData) {
                                                                return Center(
                                                                  child:
                                                                      SizedBox(
                                                                    width: 50.0,
                                                                    height:
                                                                        50.0,
                                                                    child:
                                                                        CircularProgressIndicator(
                                                                      valueColor:
                                                                          AlwaysStoppedAnimation<
                                                                              Color>(
                                                                        FlutterFlowTheme.of(context)
                                                                            .tertiary,
                                                                      ),
                                                                    ),
                                                                  ),
                                                                );
                                                              }
                                                              List<RoleMenuRecord>
                                                                  gridViewRoleMenuRecordList =
                                                                  snapshot
                                                                      .data!;
                                                              // Return an empty Container when the item does not exist.
                                                              if (snapshot.data!
                                                                  .isEmpty) {
                                                                return Container();
                                                              }
                                                              final gridViewRoleMenuRecord =
                                                                  gridViewRoleMenuRecordList
                                                                          .isNotEmpty
                                                                      ? gridViewRoleMenuRecordList
                                                                          .first
                                                                      : null;
                                                              return GridView(
                                                                padding:
                                                                    EdgeInsets
                                                                        .zero,
                                                                gridDelegate:
                                                                    SliverGridDelegateWithFixedCrossAxisCount(
                                                                  crossAxisCount:
                                                                      2,
                                                                  mainAxisSpacing:
                                                                      5.0,
                                                                  childAspectRatio:
                                                                      1.3,
                                                                ),
                                                                shrinkWrap:
                                                                    true,
                                                                scrollDirection:
                                                                    Axis.horizontal,
                                                                children: [
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คอิน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          return;
                                                                        }

                                                                        context.goNamed(
                                                                            'DashboardCheckin');
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.start,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/google-maps-new-interface1.jpg',
                                                                                  fit: BoxFit.fitHeight,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'เช็คอิน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          enableDrag:
                                                                              false,
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginLeavePagetab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginLeavePagetab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginLeavePagetab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginLeavePagetab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginLeavePagetab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        _model.bossCheckOutputPad =
                                                                            await GetBossAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        FFAppState().bossCheckFlag =
                                                                            GetBossAPICall.bossCheck(
                                                                          (_model.bossCheckOutputPad?.jsonBody ??
                                                                              ''),
                                                                        )!;
                                                                        setState(
                                                                            () {});
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'DashboardLeavePage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            StreamBuilder<List<NotificationRecord>>(
                                                                              stream: queryNotificationRecord(
                                                                                parent: containerUserCustomRecord?.reference,
                                                                                queryBuilder: (notificationRecord) => notificationRecord
                                                                                    .where(
                                                                                      'noti_type',
                                                                                      isEqualTo: 'Leave_Request',
                                                                                    )
                                                                                    .where(
                                                                                      'this_noti_is_read',
                                                                                      isEqualTo: false,
                                                                                    ),
                                                                              ),
                                                                              builder: (context, snapshot) {
                                                                                // Customize what your widget looks like when it's loading.
                                                                                if (!snapshot.hasData) {
                                                                                  return Center(
                                                                                    child: SizedBox(
                                                                                      width: 50.0,
                                                                                      height: 50.0,
                                                                                      child: CircularProgressIndicator(
                                                                                        valueColor: AlwaysStoppedAnimation<Color>(
                                                                                          FlutterFlowTheme.of(context).tertiary,
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                }
                                                                                List<NotificationRecord> badgeNotificationRecordList = snapshot.data!;
                                                                                return badges.Badge(
                                                                                  badgeContent: Text(
                                                                                    badgeNotificationRecordList.length.toString(),
                                                                                    style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                          fontFamily: 'Poppins',
                                                                                          color: Colors.white,
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                  ),
                                                                                  showBadge: badgeNotificationRecordList.length > 0,
                                                                                  shape: badges.BadgeShape.circle,
                                                                                  badgeColor: Color(0xFFFF0005),
                                                                                  elevation: 4.0,
                                                                                  padding: EdgeInsets.all(8.0),
                                                                                  position: badges.BadgePosition.topEnd(),
                                                                                  animationType: badges.BadgeAnimationType.scale,
                                                                                  toAnimate: true,
                                                                                  child: Padding(
                                                                                    padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                    child: Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                      height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                      clipBehavior: Clip.antiAlias,
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                      ),
                                                                                      child: Image.asset(
                                                                                        'assets/images/calender_1.png',
                                                                                        fit: BoxFit.cover,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ),
                                                                            Text(
                                                                              'ขออนุมัติลา',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'GEN E-PA')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!.empAdmin.contains(gridViewRoleMenuRecord
                                                                          ?.empAdmin
                                                                          ?.contains(FFAppState()
                                                                              .employeeID)
                                                                          ?.toString()) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'GEN E-PA')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_report_base_url',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.reportStorageGenEpaQueryTab =
                                                                                await queryReportStorageRecordOnce(
                                                                              queryBuilder: (reportStorageRecord) => reportStorageRecord.where(
                                                                                'report_name',
                                                                                isEqualTo: 'gen_epa',
                                                                              ),
                                                                              singleRecord: true,
                                                                            ).then((s) => s.firstOrNull);
                                                                            _shouldSetState =
                                                                                true;
                                                                            Navigator.pop(context);
                                                                            if (FFAppState().profileLevel ==
                                                                                'เขต') {
                                                                              await actions.openTableauBrowser(
                                                                                FFAppState().accessToken,
                                                                                '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageGenEpaQueryTab?.reportUrl?[1]}',
                                                                                FFAppState().isOpenAndroidTableauBrowser,
                                                                              );
                                                                            } else {
                                                                              if (FFAppState().profileLevel == 'ภาค') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageGenEpaQueryTab?.reportUrl?.first}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              } else {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageGenEpaQueryTab?.reportUrl?.last}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              }
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/1712632790359.jpg',
                                                                                      fit: BoxFit.cover,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'GEN E-PA',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 20.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'บันทึกวีดิโอ (ลูกค้า)')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        _model.queryRecordVideoIsOnWebviewTab =
                                                                            await queryHideInAppContentRecordOnce(
                                                                          queryBuilder: (hideInAppContentRecord) =>
                                                                              hideInAppContentRecord.where(
                                                                            'content_name',
                                                                            isEqualTo:
                                                                                'record_video_is_on_webview',
                                                                          ),
                                                                          singleRecord:
                                                                              true,
                                                                        ).then((s) =>
                                                                                s.firstOrNull);
                                                                        _shouldSetState =
                                                                            true;
                                                                        _model.getWebRecodeVideoUrlTab =
                                                                            await queryUrlLinkStorageRecordOnce(
                                                                          queryBuilder: (urlLinkStorageRecord) =>
                                                                              urlLinkStorageRecord.where(
                                                                            'url_name',
                                                                            isEqualTo:
                                                                                'web_record_video_url',
                                                                          ),
                                                                          singleRecord:
                                                                              true,
                                                                        ).then((s) =>
                                                                                s.firstOrNull);
                                                                        _shouldSetState =
                                                                            true;
                                                                        if (_model
                                                                            .queryRecordVideoIsOnWebviewTab!
                                                                            .isShowContent) {
                                                                          await requestPermission(
                                                                              cameraPermission);
                                                                          await requestPermission(
                                                                              microphonePermission);

                                                                          context
                                                                              .goNamed(
                                                                            'RecordVideoWebviewPage',
                                                                            queryParameters:
                                                                                {
                                                                              'webUrl': serializeParam(
                                                                                _model.getWebRecodeVideoUrlTab?.urlLink,
                                                                                ParamType.String,
                                                                              ),
                                                                            }.withoutNulls,
                                                                          );

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        await launchURL(_model
                                                                            .getWebRecodeVideoUrlTab!
                                                                            .urlLink);
                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          mainAxisAlignment:
                                                                              MainAxisAlignment.start,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/icons8-video-recording-48.png',
                                                                                  fit: BoxFit.fitHeight,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'บันทึกวีดิโอ\n   (ลูกค้า)',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงานรถยึด')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!.empAdmin.contains(gridViewRoleMenuRecord
                                                                          ?.empAdmin
                                                                          ?.contains(FFAppState()
                                                                              .employeeID)
                                                                          ?.toString()) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'รายงานรถยึด')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_report_base_url',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.reportStorageImpoundCarTab =
                                                                                await queryReportStorageRecordOnce(
                                                                              queryBuilder: (reportStorageRecord) => reportStorageRecord.where(
                                                                                'report_name',
                                                                                isEqualTo: 'impound_car',
                                                                              ),
                                                                              singleRecord: true,
                                                                            ).then((s) => s.firstOrNull);
                                                                            _shouldSetState =
                                                                                true;
                                                                            Navigator.pop(context);
                                                                            await actions.openTableauBrowser(
                                                                              FFAppState().accessToken,
                                                                              '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageImpoundCarTab?.reportUrl?.first}',
                                                                              FFAppState().isOpenAndroidTableauBrowser,
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/Group-7891.png',
                                                                                      fit: BoxFit.cover,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'รายงานรถยึด',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 20.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โครงการ ZUVศษ')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!.empAdmin.contains(gridViewRoleMenuRecord
                                                                          ?.empAdmin
                                                                          ?.contains(FFAppState()
                                                                              .employeeID)
                                                                          ?.toString()) ||
                                                                      functions.containsValueInDataTypeList(
                                                                          gridViewRoleMenuRecord
                                                                              ?.adminRoleGroup
                                                                              ?.toList(),
                                                                          FFAppState()
                                                                              .employeeID,
                                                                          'โครงการ ZUVศษ')!)
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_report_base_url',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.reportStorageZUVQueryTab =
                                                                                await queryReportStorageRecordOnce(
                                                                              queryBuilder: (reportStorageRecord) => reportStorageRecord.where(
                                                                                'report_name',
                                                                                isEqualTo: 'ZUV',
                                                                              ),
                                                                              singleRecord: true,
                                                                            ).then((s) => s.firstOrNull);
                                                                            _shouldSetState =
                                                                                true;
                                                                            Navigator.pop(context);
                                                                            if (FFAppState().profileLevel ==
                                                                                'เขต') {
                                                                              await actions.openTableauBrowser(
                                                                                FFAppState().accessToken,
                                                                                '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageZUVQueryTab?.reportUrl?.first}',
                                                                                FFAppState().isOpenAndroidTableauBrowser,
                                                                              );
                                                                            } else {
                                                                              if (FFAppState().profileLevel == 'ภาค') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageZUVQueryTab?.reportUrl?[1]}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              } else {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}${_model.reportStorageZUVQueryTab?.reportUrl?.last}',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              }
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/ZUV-Logo.png',
                                                                                      fit: BoxFit.cover,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'โครงการ ZUVศษ',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 20.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ประกันนอกเรท')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (FFAppState()
                                                                            .isLoadedInsuranceData) {
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.gerBrandTab =
                                                                            await TeleGetBrandAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.gerBrandTab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${(_model.gerBrandTab?.statusCode ?? 200).toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (TeleGetBrandAPICall.statusLevel1(
                                                                              (_model.gerBrandTab?.jsonBody ?? ''),
                                                                            ) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${TeleGetBrandAPICall.statusLevel1(
                                                                                    (_model.gerBrandTab?.jsonBody ?? ''),
                                                                                  )?.toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        FFAppState()
                                                                            .insuranceBasicBrandIdList = TeleGetBrandAPICall.brandID(
                                                                          (_model.gerBrandTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicBrandNameList = TeleGetBrandAPICall.brandName(
                                                                          (_model.gerBrandTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .update(() {});
                                                                        _model.getModelTab =
                                                                            await TeleGetModelAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.getModelTab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${(_model.getModelTab?.statusCode ?? 200).toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (TeleGetModelAPICall.statusLevel1(
                                                                              (_model.getModelTab?.jsonBody ?? ''),
                                                                            ) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${TeleGetModelAPICall.statusLevel1(
                                                                                    (_model.getModelTab?.jsonBody ?? ''),
                                                                                  )?.toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        FFAppState()
                                                                            .insuranceBasicModelIdListOriginal = TeleGetModelAPICall.modelCode(
                                                                          (_model.getModelTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicModelNameListOriginal = TeleGetModelAPICall.modelName(
                                                                          (_model.getModelTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .update(() {});
                                                                        FFAppState()
                                                                            .insuranceBasicModelBrandIdListOriginal = TeleGetModelAPICall.brandID(
                                                                          (_model.getModelTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .update(() {});
                                                                        _model.getProvinceTab =
                                                                            await TeleGetProvinceAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.getProvinceTab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${(_model.getProvinceTab?.statusCode ?? 200).toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (TeleGetProvinceAPICall.statusLevel1(
                                                                              (_model.getProvinceTab?.jsonBody ?? ''),
                                                                            ) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${TeleGetProvinceAPICall.statusLevel1(
                                                                                    (_model.getProvinceTab?.jsonBody ?? ''),
                                                                                  )?.toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        FFAppState().isLoadedInsuranceData =
                                                                            true;
                                                                        FFAppState()
                                                                            .insuranceBasicProvinceIdList = TeleGetProvinceAPICall.provinceID(
                                                                          (_model.getProvinceTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicProvinceNameList = TeleGetProvinceAPICall.provinceNameTH(
                                                                          (_model.getProvinceTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .update(() {});
                                                                        _model.getVehicleTab =
                                                                            await InsuranceRequestGetVehicleAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.getVehicleTab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${(_model.getVehicleTab?.statusCode ?? 200).toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (InsuranceRequestGetVehicleAPICall.statusLayer1(
                                                                              (_model.getVehicleTab?.jsonBody ?? ''),
                                                                            ) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${InsuranceRequestGetVehicleAPICall.statusLayer1(
                                                                                    (_model.getVehicleTab?.jsonBody ?? ''),
                                                                                  )?.toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        FFAppState()
                                                                            .insuranceBasicVehicleUsedTypeIdList = InsuranceRequestGetVehicleAPICall.vehicleId(
                                                                          (_model.getVehicleTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicVehicleUsedTypeNameList = InsuranceRequestGetVehicleAPICall.vehicleName(
                                                                          (_model.getVehicleTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicVehicleUsedTypeTypeList = InsuranceRequestGetVehicleAPICall.vehicletype(
                                                                          (_model.getVehicleTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicVehicleUsedTypeCodeList = InsuranceRequestGetVehicleAPICall.vehicleCode(
                                                                          (_model.getVehicleTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        setState(
                                                                            () {});
                                                                        _model.getInsurerTab =
                                                                            await InsuranceRequestGetInsurerAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.getInsurerTab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${(_model.getInsurerTab?.statusCode ?? 200).toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (InsuranceRequestGetInsurerAPICall.statusLayer1(
                                                                              (_model.getInsurerTab?.jsonBody ?? ''),
                                                                            ) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${InsuranceRequestGetInsurerAPICall.statusLayer1(
                                                                                    (_model.getInsurerTab?.jsonBody ?? ''),
                                                                                  )?.toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        FFAppState()
                                                                            .insuranceBasicInsurerIdList = InsuranceRequestGetInsurerAPICall.companyId(
                                                                          (_model.getInsurerTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicInsurerCodeList = InsuranceRequestGetInsurerAPICall.companyCode(
                                                                          (_model.getInsurerTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicInsurerShortNameList = InsuranceRequestGetInsurerAPICall.companyShortName(
                                                                          (_model.getInsurerTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicInsurerFullNameList = InsuranceRequestGetInsurerAPICall.companyFullName(
                                                                          (_model.getInsurerTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicInsurerListNameList = InsuranceRequestGetInsurerAPICall
                                                                                .companyListName(
                                                                          (_model.getInsurerTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .map((e) =>
                                                                                e.toString())
                                                                            .toList()
                                                                            .cast<String>();
                                                                        setState(
                                                                            () {});
                                                                        _model.getCoverTypeTab =
                                                                            await TeleGetCoverTypeAPICall.call(
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.getCoverTypeTab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${(_model.getCoverTypeTab?.statusCode ?? 200).toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        if (TeleGetCoverTypeAPICall.statusLevel1(
                                                                              (_model.getCoverTypeTab?.jsonBody ?? ''),
                                                                            ) !=
                                                                            200) {
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('พบข้อผิดพลาด (${TeleGetCoverTypeAPICall.statusLevel1(
                                                                                    (_model.getCoverTypeTab?.jsonBody ?? ''),
                                                                                  )?.toString()})'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        FFAppState()
                                                                            .insuranceBasicCoverTypeIdList = TeleGetCoverTypeAPICall.coverTypeId(
                                                                          (_model.getCoverTypeTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicCoverTypeCodeList = TeleGetCoverTypeAPICall.coverTypeCode(
                                                                          (_model.getCoverTypeTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        FFAppState()
                                                                            .insuranceBasicCoverTypeNameList = TeleGetCoverTypeAPICall.coverTypeName(
                                                                          (_model.getCoverTypeTab?.jsonBody ??
                                                                              ''),
                                                                        )!
                                                                            .toList()
                                                                            .cast<String>();
                                                                        setState(
                                                                            () {});
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'InsuranceRequestDashboardPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/Screenshot_2566-08-02_at_23.36.22.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ประกันนอกเรท',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายงาน BSI')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          return;
                                                                        }

                                                                        context.goNamed(
                                                                            'BsiReportPage');
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/earning.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'รายงาน BSI',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เป้า/ผลงาน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          return;
                                                                        }
                                                                        if (functions.checkIsHaveThisValueInList(
                                                                            containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                            FFAppState().employeeID)!) {
                                                                          await showModalBottomSheet(
                                                                            isScrollControlled:
                                                                                true,
                                                                            backgroundColor:
                                                                                Colors.transparent,
                                                                            barrierColor:
                                                                                Color(0x00000000),
                                                                            isDismissible:
                                                                                false,
                                                                            enableDrag:
                                                                                false,
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (context) {
                                                                              return WebViewAware(
                                                                                child: GestureDetector(
                                                                                  onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                  child: Padding(
                                                                                    padding: MediaQuery.viewInsetsOf(context),
                                                                                    child: Container(
                                                                                      height: MediaQuery.sizeOf(context).height * 0.6,
                                                                                      child: SearchEmployeeComponentWidget(
                                                                                        tableauUrlLink: 'www.google.co.th',
                                                                                        fromPage: 'เป้า/ผลงาน',
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            },
                                                                          ).then((value) =>
                                                                              safeSetState(() {}));

                                                                          return;
                                                                        }

                                                                        context
                                                                            .goNamed(
                                                                          'IBSReport',
                                                                          queryParameters:
                                                                              {
                                                                            'employeeId':
                                                                                serializeParam(
                                                                              FFAppState().employeeID,
                                                                              ParamType.String,
                                                                            ),
                                                                          }.withoutNulls,
                                                                        );
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/Pngtreegolden_trophy_cup_icon_cartoon_5207510.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'เป้า/ผลงาน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'KPI')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID))
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo: FFAppState().profileLevel == 'ภาค'
                                                                              ? 'tableau_url_link'
                                                                              : 'tableau_area_url_link' != ''
                                                                                  ? FFAppState().profileLevel == 'ภาค'
                                                                                      ? 'tableau_url_link'
                                                                                      : 'tableau_area_url_link'
                                                                                  : null,
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginKPItab =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginKPItab?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPItab?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPItab?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginKPItab?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            if (functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('EmployeeKpiCEOPage');
                                                                            } else {
                                                                              Navigator.pop(context);
                                                                              if (FFAppState().profileLevel == 'ภาค') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  containerUrlLinkStorageRecord?.urlLink,
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              if (FFAppState().profileLevel == 'เขต') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  containerUrlLinkStorageRecord?.urlLink,
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }

                                                                              context.goNamed('EmployeeKPIPage');
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/icon_kpi.jpg',
                                                                                      fit: BoxFit.contain,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'KPI',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 20.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID))
                                                                    FutureBuilder<
                                                                        List<
                                                                            AuthorizationRecord>>(
                                                                      future:
                                                                          queryAuthorizationRecordOnce(
                                                                        queryBuilder:
                                                                            (authorizationRecord) =>
                                                                                authorizationRecord.where(
                                                                          'content_name',
                                                                          isEqualTo:
                                                                              'welfare_kpi_ceo',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<AuthorizationRecord>
                                                                            containerWelfareTabAuthorizationRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final containerWelfareTabAuthorizationRecord = containerWelfareTabAuthorizationRecordList.isNotEmpty
                                                                            ? containerWelfareTabAuthorizationRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginKPIWelfaretab =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginKPIWelfaretab?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPIWelfaretab?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginKPIWelfaretab?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginKPIWelfaretab?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            if (functions.checkIsHaveThisValueInList(containerWelfareTabAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              Navigator.pop(context);

                                                                              context.pushNamed('WelfareKPICEOPage');
                                                                            } else {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('WelfareKPIPage');
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/KPI.jpg',
                                                                                      fit: BoxFit.contain,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'ยอดจัดสาขา',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 20.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ยอดจัดสาขา')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID))
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo: functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(), FFAppState().employeeID)!
                                                                              ? 'tableau_thaipaiboon_ceo'
                                                                              : 'tableau_thaipaiboon' != ''
                                                                                  ? functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(), FFAppState().employeeID)!
                                                                                      ? 'tableau_thaipaiboon_ceo'
                                                                                      : 'tableau_thaipaiboon'
                                                                                  : null,
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            thaipaiboonPadUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final thaipaiboonPadUrlLinkStorageRecord = thaipaiboonPadUrlLinkStorageRecordList.isNotEmpty
                                                                            ? thaipaiboonPadUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              enableDrag: false,
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginThaiPaiboonPad =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginThaiPaiboonPad?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginThaiPaiboonPad?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginThaiPaiboonPad?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginThaiPaiboonPad?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            Navigator.pop(context);
                                                                            if (functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              await showModalBottomSheet(
                                                                                isScrollControlled: true,
                                                                                backgroundColor: Colors.transparent,
                                                                                barrierColor: Color(0x00000000),
                                                                                isDismissible: false,
                                                                                enableDrag: false,
                                                                                context: context,
                                                                                builder: (context) {
                                                                                  return WebViewAware(
                                                                                    child: GestureDetector(
                                                                                      onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                      child: Padding(
                                                                                        padding: MediaQuery.viewInsetsOf(context),
                                                                                        child: Container(
                                                                                          height: MediaQuery.sizeOf(context).height * 0.6,
                                                                                          child: SearchEmployeeComponentWidget(
                                                                                            tableauUrlLink: thaipaiboonPadUrlLinkStorageRecord?.urlLink,
                                                                                            fromPage: 'ยอดประกัน',
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              ).then((value) => safeSetState(() {}));
                                                                            } else {
                                                                              await actions.openTableauBrowser(
                                                                                FFAppState().accessToken,
                                                                                thaipaiboonPadUrlLinkStorageRecord?.urlLink,
                                                                                FFAppState().isOpenAndroidTableauBrowser,
                                                                              );
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/tpb.jpeg',
                                                                                      fit: BoxFit.cover,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  'ยอดประกัน',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 20.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'รายชื่อลีด')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginCheckLeadtab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginCheckLeadtab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginCheckLeadtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginCheckLeadtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginCheckLeadtab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        await actions
                                                                            .batchUpdate2(
                                                                          containerUserCustomRecord
                                                                              ?.reference,
                                                                          'Lead',
                                                                        );
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'LeadNotiPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            StreamBuilder<List<NotificationRecord>>(
                                                                              stream: queryNotificationRecord(
                                                                                parent: containerUserCustomRecord?.reference,
                                                                                queryBuilder: (notificationRecord) => notificationRecord
                                                                                    .where(
                                                                                      'noti_type',
                                                                                      isEqualTo: 'Lead',
                                                                                    )
                                                                                    .where(
                                                                                      'this_noti_is_read',
                                                                                      isEqualTo: false,
                                                                                    ),
                                                                              ),
                                                                              builder: (context, snapshot) {
                                                                                // Customize what your widget looks like when it's loading.
                                                                                if (!snapshot.hasData) {
                                                                                  return Center(
                                                                                    child: SizedBox(
                                                                                      width: 50.0,
                                                                                      height: 50.0,
                                                                                      child: CircularProgressIndicator(
                                                                                        valueColor: AlwaysStoppedAnimation<Color>(
                                                                                          FlutterFlowTheme.of(context).tertiary,
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  );
                                                                                }
                                                                                List<NotificationRecord> badgeNotificationRecordList = snapshot.data!;
                                                                                return badges.Badge(
                                                                                  badgeContent: Text(
                                                                                    badgeNotificationRecordList.length.toString(),
                                                                                    style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                          fontFamily: 'Poppins',
                                                                                          color: Colors.white,
                                                                                          letterSpacing: 0.0,
                                                                                        ),
                                                                                  ),
                                                                                  showBadge: badgeNotificationRecordList.length > 0,
                                                                                  shape: badges.BadgeShape.circle,
                                                                                  badgeColor: Color(0xFFFF0000),
                                                                                  elevation: 4.0,
                                                                                  padding: EdgeInsets.all(8.0),
                                                                                  position: badges.BadgePosition.topEnd(),
                                                                                  animationType: badges.BadgeAnimationType.scale,
                                                                                  toAnimate: true,
                                                                                  child: Padding(
                                                                                    padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                    child: Container(
                                                                                      width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                      height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                      clipBehavior: Clip.antiAlias,
                                                                                      decoration: BoxDecoration(
                                                                                        shape: BoxShape.circle,
                                                                                      ),
                                                                                      child: Image.asset(
                                                                                        'assets/images/webpc-passthru.webp',
                                                                                        fit: BoxFit.fitHeight,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ),
                                                                            Text(
                                                                              'รายชื่อลีด',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              '%ความสำเร็จ')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(FFAppState()
                                                                              .employeeID))
                                                                    FutureBuilder<
                                                                        List<
                                                                            UrlLinkStorageRecord>>(
                                                                      future:
                                                                          queryUrlLinkStorageRecordOnce(
                                                                        queryBuilder:
                                                                            (urlLinkStorageRecord) =>
                                                                                urlLinkStorageRecord.where(
                                                                          'url_name',
                                                                          isEqualTo:
                                                                              'tableau_daily_new_loan',
                                                                        ),
                                                                        singleRecord:
                                                                            true,
                                                                      ),
                                                                      builder:
                                                                          (context,
                                                                              snapshot) {
                                                                        // Customize what your widget looks like when it's loading.
                                                                        if (!snapshot
                                                                            .hasData) {
                                                                          return Center(
                                                                            child:
                                                                                SizedBox(
                                                                              width: 50.0,
                                                                              height: 50.0,
                                                                              child: CircularProgressIndicator(
                                                                                valueColor: AlwaysStoppedAnimation<Color>(
                                                                                  FlutterFlowTheme.of(context).tertiary,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          );
                                                                        }
                                                                        List<UrlLinkStorageRecord>
                                                                            containerUrlLinkStorageRecordList =
                                                                            snapshot.data!;
                                                                        // Return an empty Container when the item does not exist.
                                                                        if (snapshot
                                                                            .data!
                                                                            .isEmpty) {
                                                                          return Container();
                                                                        }
                                                                        final containerUrlLinkStorageRecord = containerUrlLinkStorageRecordList.isNotEmpty
                                                                            ? containerUrlLinkStorageRecordList.first
                                                                            : null;
                                                                        return InkWell(
                                                                          splashColor:
                                                                              Colors.transparent,
                                                                          focusColor:
                                                                              Colors.transparent,
                                                                          hoverColor:
                                                                              Colors.transparent,
                                                                          highlightColor:
                                                                              Colors.transparent,
                                                                          onTap:
                                                                              () async {
                                                                            var _shouldSetState =
                                                                                false;
                                                                            HapticFeedback.mediumImpact();
                                                                            if (!(FFAppState().isFromAuthenPage ||
                                                                                FFAppState().isFromSetPinPage)) {
                                                                              Navigator.pop(context);

                                                                              context.goNamed('PinCodePage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            showModalBottomSheet(
                                                                              isScrollControlled: true,
                                                                              backgroundColor: Colors.transparent,
                                                                              barrierColor: Color(0x00000000),
                                                                              context: context,
                                                                              builder: (context) {
                                                                                return WebViewAware(
                                                                                  child: GestureDetector(
                                                                                    onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                    child: Padding(
                                                                                      padding: MediaQuery.viewInsetsOf(context),
                                                                                      child: Container(
                                                                                        height: double.infinity,
                                                                                        child: LoadingSceneWidget(),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                );
                                                                              },
                                                                            ).then((value) =>
                                                                                safeSetState(() {}));

                                                                            _model.checkLoginPercentSuccessTab =
                                                                                await ActionUserAPICall.call(
                                                                              token: FFAppState().accessToken,
                                                                              apiUrl: FFAppState().apiURLLocalState,
                                                                            );

                                                                            _shouldSetState =
                                                                                true;
                                                                            if ((_model.checkLoginPercentSuccessTab?.statusCode ?? 200) !=
                                                                                200) {
                                                                              if (!((ActionUserAPICall.message(
                                                                                        (_model.checkLoginPercentSuccessTab?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'The token has been blacklisted') ||
                                                                                  (ActionUserAPICall.message(
                                                                                        (_model.checkLoginPercentSuccessTab?.jsonBody ?? ''),
                                                                                      ) ==
                                                                                      'Token Signature could not be verified.'))) {
                                                                                await showDialog(
                                                                                  context: context,
                                                                                  builder: (alertDialogContext) {
                                                                                    return WebViewAware(
                                                                                      child: AlertDialog(
                                                                                        content: Text('พบข้อผิดพลาด (${(_model.checkLoginPercentSuccessTab?.statusCode ?? 200).toString()})'),
                                                                                        actions: [
                                                                                          TextButton(
                                                                                            onPressed: () => Navigator.pop(alertDialogContext),
                                                                                            child: Text('Ok'),
                                                                                          ),
                                                                                        ],
                                                                                      ),
                                                                                    );
                                                                                  },
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              await showDialog(
                                                                                context: context,
                                                                                builder: (alertDialogContext) {
                                                                                  return WebViewAware(
                                                                                    child: AlertDialog(
                                                                                      content: Text('Session Loginหมดอายุ'),
                                                                                      actions: [
                                                                                        TextButton(
                                                                                          onPressed: () => Navigator.pop(alertDialogContext),
                                                                                          child: Text('Ok'),
                                                                                        ),
                                                                                      ],
                                                                                    ),
                                                                                  );
                                                                                },
                                                                              );
                                                                              FFAppState().loginStateFirebase = '[loginStateFirebase]';
                                                                              FFAppState().deleteAccessToken();
                                                                              FFAppState().accessToken = 'access_token';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteEmployeeID();
                                                                              FFAppState().employeeID = 'employee_id';

                                                                              FFAppState().QRCodeLink = 'qrcode_link';
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteApiURLLocalState();
                                                                              FFAppState().apiURLLocalState = 'api_url_local_state';

                                                                              FFAppState().deleteBranchCode();
                                                                              FFAppState().branchCode = 'branch_code';

                                                                              FFAppState().update(() {});
                                                                              FFAppState().isFromSetPinPage = false;
                                                                              FFAppState().leadChannelColor = [];
                                                                              FFAppState().update(() {});
                                                                              FFAppState().leadChannelList = [];
                                                                              FFAppState().isFromLoginPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deletePinCodeAuthen();
                                                                              FFAppState().pinCodeAuthen = '013972';

                                                                              FFAppState().isFromAuthenPage = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().deleteDateDoNotShowAgain();
                                                                              FFAppState().dateDoNotShowAgain = null;

                                                                              FFAppState().deleteDoNotShowAgain();
                                                                              FFAppState().doNotShowAgain = false;

                                                                              FFAppState().update(() {});
                                                                              FFAppState().inAppViaNotification = true;
                                                                              FFAppState().isInApp = false;
                                                                              FFAppState().update(() {});
                                                                              FFAppState().fcmToken = 'fcm_token';
                                                                              FFAppState().isPassLoginSection = false;
                                                                              FFAppState().update(() {});
                                                                              Navigator.pop(context);
                                                                              await actions.a22();

                                                                              context.goNamed('LoginPage');

                                                                              if (_shouldSetState)
                                                                                setState(() {});
                                                                              return;
                                                                            }
                                                                            if (functions.checkIsHaveThisValueInList(containerAuthorizationRecord?.employeeIdList?.toList(),
                                                                                FFAppState().employeeID)!) {
                                                                              Navigator.pop(context);
                                                                              var confirmDialogResponse = await showDialog<bool>(
                                                                                    context: context,
                                                                                    builder: (alertDialogContext) {
                                                                                      return WebViewAware(
                                                                                        child: AlertDialog(
                                                                                          content: Text('ต้องการจะดูรายงาน % ความสำเร็จแบบใด'),
                                                                                          actions: [
                                                                                            TextButton(
                                                                                              onPressed: () => Navigator.pop(alertDialogContext, false),
                                                                                              child: Text('ภาค'),
                                                                                            ),
                                                                                            TextButton(
                                                                                              onPressed: () => Navigator.pop(alertDialogContext, true),
                                                                                              child: Text('เขต'),
                                                                                            ),
                                                                                          ],
                                                                                        ),
                                                                                      );
                                                                                    },
                                                                                  ) ??
                                                                                  false;
                                                                              if (confirmDialogResponse) {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Area',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              } else {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Region',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                              }
                                                                            } else {
                                                                              Navigator.pop(context);
                                                                              if ((FFAppState().profileLevel == 'ภาค') || gridViewRoleMenuRecord!.empAdmin.contains(FFAppState().employeeID)) {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Region',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                              if (FFAppState().profileLevel == 'เขต') {
                                                                                await actions.openTableauBrowser(
                                                                                  FFAppState().accessToken,
                                                                                  '${containerUrlLinkStorageRecord?.urlLink}Area',
                                                                                  FFAppState().isOpenAndroidTableauBrowser,
                                                                                );
                                                                                if (_shouldSetState) setState(() {});
                                                                                return;
                                                                              }
                                                                            }

                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                          },
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                100.0,
                                                                            height:
                                                                                100.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: FlutterFlowTheme.of(context).secondaryBackground,
                                                                            ),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              children: [
                                                                                Padding(
                                                                                  padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                                  child: Container(
                                                                                    width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                    clipBehavior: Clip.antiAlias,
                                                                                    decoration: BoxDecoration(
                                                                                      shape: BoxShape.circle,
                                                                                    ),
                                                                                    child: Image.asset(
                                                                                      'assets/images/Untitled-1123213213123.png',
                                                                                      fit: BoxFit.cover,
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                Text(
                                                                                  '%ความสำเร็จ',
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 20.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        );
                                                                      },
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ขออนุมัติลา')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginInsurancetab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginInsurancetab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginInsurancetab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginInsurancetab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginInsurancetab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'CheckInsurancePage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/2022-11-03_10-22-14.jpg',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'เช็คเบี้ยประกัน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Branch View')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        currentUserLocationValue =
                                                                            await getCurrentUserLocation(defaultLocation: LatLng(0.0, 0.0));
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginBranchViewtab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginBranchViewtab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginBranchViewtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginBranchViewtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginBranchViewtab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }

                                                                        var userLogRecordReference = UserLogRecord
                                                                            .collection
                                                                            .doc();
                                                                        await userLogRecordReference
                                                                            .set(createUserLogRecordData(
                                                                          employeeId:
                                                                              FFAppState().employeeID,
                                                                          action:
                                                                              'Branch_View',
                                                                          actionTime:
                                                                              getCurrentTimestamp,
                                                                          userLocation:
                                                                              currentUserLocationValue,
                                                                        ));
                                                                        _model.createUserLogBranchViewtab = UserLogRecord.getDocumentFromData(
                                                                            createUserLogRecordData(
                                                                              employeeId: FFAppState().employeeID,
                                                                              action: 'Branch_View',
                                                                              actionTime: getCurrentTimestamp,
                                                                              userLocation: currentUserLocationValue,
                                                                            ),
                                                                            userLogRecordReference);
                                                                        _shouldSetState =
                                                                            true;
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'Dashboard');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/favicon-196.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'Branch View',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'เช็คเบี้ยประกัน')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginQRtab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginQRtab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginQRtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginQRtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginQRtab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'GenQRPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.network(
                                                                                  'https://th.qr-code-generator.com/wp-content/themes/qr/new_structure/markets/basic_market/generator/dist/generator/assets/images/websiteQRCode_noFrame.png',
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'QR พนักงาน',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'Saleskit')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginSaleskittab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginSaleskittab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginSaleskittab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginSaleskittab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginSaleskittab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'SaleskitPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/278-2784993_transparent-people-reading-png-sale-man-logo-png.png',
                                                                                  fit: BoxFit.contain,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'Saleskit',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ฟอร์มลีด')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginFormLeadtab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginFormLeadtab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginFormLeadtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginFormLeadtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginFormLeadtab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'LeadSurveyRegisPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/istock_blossomstar_survey.jpg',
                                                                                  fit: BoxFit.fitHeight,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ฟอร์มลีด',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'โปรโมชั่น')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginPromotiontab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginPromotiontab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginPromotiontab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginPromotiontab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginPromotiontab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'PromotionPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/promo.png',
                                                                                  fit: BoxFit.contain,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'โปรโมชั่น',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'COACH')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        currentUserLocationValue =
                                                                            await getCurrentUserLocation(defaultLocation: LatLng(0.0, 0.0));
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginCoachtab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginCoachtab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginCoachtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginCoachtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginCoachtab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }

                                                                        var userLogRecordReference = UserLogRecord
                                                                            .collection
                                                                            .doc();
                                                                        await userLogRecordReference
                                                                            .set(createUserLogRecordData(
                                                                          employeeId:
                                                                              FFAppState().employeeID,
                                                                          action:
                                                                              'COACH',
                                                                          actionTime:
                                                                              getCurrentTimestamp,
                                                                          userLocation:
                                                                              currentUserLocationValue,
                                                                        ));
                                                                        _model.createdUserLogCoachtab = UserLogRecord.getDocumentFromData(
                                                                            createUserLogRecordData(
                                                                              employeeId: FFAppState().employeeID,
                                                                              action: 'COACH',
                                                                              actionTime: getCurrentTimestamp,
                                                                              userLocation: currentUserLocationValue,
                                                                            ),
                                                                            userLogRecordReference);
                                                                        _shouldSetState =
                                                                            true;
                                                                        Navigator.pop(
                                                                            context);
                                                                        await launchURL(
                                                                            'https://hris.srisawadpower.com/COACH');
                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/Screenshot_2022-10-17_095012.png',
                                                                                  fit: BoxFit.fitHeight,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'COACH',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ห้องเรียนทันใจ')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!
                                                                          .empAdmin
                                                                          .contains(
                                                                              FFAppState().employeeID))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginClassroomtab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginClassroomtab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginClassroomtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginClassroomtab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginClassroomtab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'ClassroomPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/ingenuity_wit_book_idea_light_bulb_learn_learning_icon_149691.png',
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ห้องเรียนทันใจ',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  if (() {
                                                                        if (FFAppState().profileLevel ==
                                                                            'HO') {
                                                                          return gridViewRoleMenuRecord!.menuVisible[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'สาขา') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleBranch[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        } else if (FFAppState().profileLevel ==
                                                                            'เขต') {
                                                                          return gridViewRoleMenuRecord!.menuVisibleArea[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        } else {
                                                                          return gridViewRoleMenuRecord!.menuZone[functions.getIndexOfSomethingList(
                                                                              gridViewRoleMenuRecord?.menuName?.toList(),
                                                                              'ข้อมูลไอที')];
                                                                        }
                                                                      }() ||
                                                                      gridViewRoleMenuRecord!.empAdmin.contains(gridViewRoleMenuRecord
                                                                          ?.empAdmin
                                                                          ?.contains(
                                                                              FFAppState().employeeID)
                                                                          ?.toString()))
                                                                    InkWell(
                                                                      splashColor:
                                                                          Colors
                                                                              .transparent,
                                                                      focusColor:
                                                                          Colors
                                                                              .transparent,
                                                                      hoverColor:
                                                                          Colors
                                                                              .transparent,
                                                                      highlightColor:
                                                                          Colors
                                                                              .transparent,
                                                                      onTap:
                                                                          () async {
                                                                        var _shouldSetState =
                                                                            false;
                                                                        HapticFeedback
                                                                            .mediumImpact();
                                                                        if (!(FFAppState().isFromAuthenPage ||
                                                                            FFAppState().isFromSetPinPage)) {
                                                                          Navigator.pop(
                                                                              context);

                                                                          context
                                                                              .goNamed('PinCodePage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        showModalBottomSheet(
                                                                          isScrollControlled:
                                                                              true,
                                                                          backgroundColor:
                                                                              Colors.transparent,
                                                                          barrierColor:
                                                                              Color(0x00000000),
                                                                          context:
                                                                              context,
                                                                          builder:
                                                                              (context) {
                                                                            return WebViewAware(
                                                                              child: GestureDetector(
                                                                                onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                child: Padding(
                                                                                  padding: MediaQuery.viewInsetsOf(context),
                                                                                  child: Container(
                                                                                    height: double.infinity,
                                                                                    child: LoadingSceneWidget(),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            );
                                                                          },
                                                                        ).then((value) =>
                                                                            safeSetState(() {}));

                                                                        _model.checkLoginITSupporttab =
                                                                            await ActionUserAPICall.call(
                                                                          token:
                                                                              FFAppState().accessToken,
                                                                          apiUrl:
                                                                              FFAppState().apiURLLocalState,
                                                                        );

                                                                        _shouldSetState =
                                                                            true;
                                                                        if ((_model.checkLoginITSupporttab?.statusCode ??
                                                                                200) !=
                                                                            200) {
                                                                          if (!((ActionUserAPICall.message(
                                                                                    (_model.checkLoginITSupporttab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'The token has been blacklisted') ||
                                                                              (ActionUserAPICall.message(
                                                                                    (_model.checkLoginITSupporttab?.jsonBody ?? ''),
                                                                                  ) ==
                                                                                  'Token Signature could not be verified.'))) {
                                                                            await showDialog(
                                                                              context: context,
                                                                              builder: (alertDialogContext) {
                                                                                return WebViewAware(
                                                                                  child: AlertDialog(
                                                                                    content: Text('พบข้อผิดพลาด (${(_model.checkLoginITSupporttab?.statusCode ?? 200).toString()})'),
                                                                                    actions: [
                                                                                      TextButton(
                                                                                        onPressed: () => Navigator.pop(alertDialogContext),
                                                                                        child: Text('Ok'),
                                                                                      ),
                                                                                    ],
                                                                                  ),
                                                                                );
                                                                              },
                                                                            );
                                                                            if (_shouldSetState)
                                                                              setState(() {});
                                                                            return;
                                                                          }
                                                                          await showDialog(
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (alertDialogContext) {
                                                                              return WebViewAware(
                                                                                child: AlertDialog(
                                                                                  content: Text('Session Loginหมดอายุ'),
                                                                                  actions: [
                                                                                    TextButton(
                                                                                      onPressed: () => Navigator.pop(alertDialogContext),
                                                                                      child: Text('Ok'),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              );
                                                                            },
                                                                          );
                                                                          FFAppState().loginStateFirebase =
                                                                              '[loginStateFirebase]';
                                                                          FFAppState()
                                                                              .deleteAccessToken();
                                                                          FFAppState().accessToken =
                                                                              'access_token';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteEmployeeID();
                                                                          FFAppState().employeeID =
                                                                              'employee_id';

                                                                          FFAppState().QRCodeLink =
                                                                              'qrcode_link';
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteApiURLLocalState();
                                                                          FFAppState().apiURLLocalState =
                                                                              'api_url_local_state';

                                                                          FFAppState()
                                                                              .deleteBranchCode();
                                                                          FFAppState().branchCode =
                                                                              'branch_code';

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().isFromSetPinPage =
                                                                              false;
                                                                          FFAppState().leadChannelColor =
                                                                              [];
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().leadChannelList =
                                                                              [];
                                                                          FFAppState().isFromLoginPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deletePinCodeAuthen();
                                                                          FFAppState().pinCodeAuthen =
                                                                              '013972';

                                                                          FFAppState().isFromAuthenPage =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState()
                                                                              .deleteDateDoNotShowAgain();
                                                                          FFAppState().dateDoNotShowAgain =
                                                                              null;

                                                                          FFAppState()
                                                                              .deleteDoNotShowAgain();
                                                                          FFAppState().doNotShowAgain =
                                                                              false;

                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().inAppViaNotification =
                                                                              true;
                                                                          FFAppState().isInApp =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          FFAppState().fcmToken =
                                                                              'fcm_token';
                                                                          FFAppState().isPassLoginSection =
                                                                              false;
                                                                          FFAppState()
                                                                              .update(() {});
                                                                          Navigator.pop(
                                                                              context);
                                                                          await actions
                                                                              .a22();

                                                                          context
                                                                              .goNamed('LoginPage');

                                                                          if (_shouldSetState)
                                                                            setState(() {});
                                                                          return;
                                                                        }
                                                                        Navigator.pop(
                                                                            context);

                                                                        context.goNamed(
                                                                            'ITSupportPage');

                                                                        if (_shouldSetState)
                                                                          setState(
                                                                              () {});
                                                                      },
                                                                      child:
                                                                          Container(
                                                                        width:
                                                                            100.0,
                                                                        height:
                                                                            100.0,
                                                                        decoration:
                                                                            BoxDecoration(
                                                                          color:
                                                                              FlutterFlowTheme.of(context).secondaryBackground,
                                                                        ),
                                                                        child:
                                                                            Column(
                                                                          mainAxisSize:
                                                                              MainAxisSize.max,
                                                                          children: [
                                                                            Padding(
                                                                              padding: EdgeInsetsDirectional.fromSTEB(0.0, 0.0, 0.0, 5.0),
                                                                              child: Container(
                                                                                width: MediaQuery.sizeOf(context).width * 0.1,
                                                                                height: MediaQuery.sizeOf(context).width * 0.1,
                                                                                clipBehavior: Clip.antiAlias,
                                                                                decoration: BoxDecoration(
                                                                                  shape: BoxShape.circle,
                                                                                ),
                                                                                child: Image.asset(
                                                                                  'assets/images/9288ca8e4f66c009d35e4cd5b409710a.png',
                                                                                  fit: BoxFit.cover,
                                                                                ),
                                                                              ),
                                                                            ),
                                                                            Text(
                                                                              'ข้อมูลไอที',
                                                                              style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                    fontFamily: 'Poppins',
                                                                                    fontSize: 20.0,
                                                                                    letterSpacing: 0.0,
                                                                                  ),
                                                                            ),
                                                                          ],
                                                                        ),
                                                                      ),
                                                                    ),
                                                                ],
                                                              );
                                                            },
                                                          ),
                                                        ),
                                                      ),
                                                    ],
                                                  ),
                                                );
                                              },
                                            ),
                                          ),
                                        if (responsiveVisibility(
                                          context: context,
                                          tablet: false,
                                          tabletLandscape: false,
                                          desktop: false,
                                        ))
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 30.0, 10.0, 0.0),
                                            child: Container(
                                              width: double.infinity,
                                              height: 175.0,
                                              decoration: BoxDecoration(),
                                              child: FutureBuilder<
                                                  List<
                                                      SawadFormServicesRecord>>(
                                                future:
                                                    querySawadFormServicesRecordOnce(
                                                  queryBuilder:
                                                      (sawadFormServicesRecord) =>
                                                          sawadFormServicesRecord
                                                              .orderBy(
                                                                  'form_service_order'),
                                                ),
                                                builder: (context, snapshot) {
                                                  // Customize what your widget looks like when it's loading.
                                                  if (!snapshot.hasData) {
                                                    return Center(
                                                      child: SizedBox(
                                                        width: 50.0,
                                                        height: 50.0,
                                                        child:
                                                            CircularProgressIndicator(
                                                          valueColor:
                                                              AlwaysStoppedAnimation<
                                                                  Color>(
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .tertiary,
                                                          ),
                                                        ),
                                                      ),
                                                    );
                                                  }
                                                  List<SawadFormServicesRecord>
                                                      listViewSawadFormServicesRecordList =
                                                      snapshot.data!;
                                                  return ListView.separated(
                                                    padding:
                                                        EdgeInsets.fromLTRB(
                                                      10.0,
                                                      0,
                                                      10.0,
                                                      0,
                                                    ),
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    itemCount:
                                                        listViewSawadFormServicesRecordList
                                                            .length,
                                                    separatorBuilder: (_, __) =>
                                                        SizedBox(width: 30.0),
                                                    itemBuilder: (context,
                                                        listViewIndex) {
                                                      final listViewSawadFormServicesRecord =
                                                          listViewSawadFormServicesRecordList[
                                                              listViewIndex];
                                                      return Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    0.0,
                                                                    5.0,
                                                                    0.0,
                                                                    5.0),
                                                        child: InkWell(
                                                          splashColor: Colors
                                                              .transparent,
                                                          focusColor: Colors
                                                              .transparent,
                                                          hoverColor: Colors
                                                              .transparent,
                                                          highlightColor: Colors
                                                              .transparent,
                                                          onTap: () async {
                                                            currentUserLocationValue =
                                                                await getCurrentUserLocation(
                                                                    defaultLocation:
                                                                        LatLng(
                                                                            0.0,
                                                                            0.0));
                                                            var _shouldSetState =
                                                                false;
                                                            HapticFeedback
                                                                .mediumImpact();
                                                            if (!(FFAppState()
                                                                    .isFromAuthenPage ||
                                                                FFAppState()
                                                                    .isFromSetPinPage)) {
                                                              Navigator.pop(
                                                                  context);

                                                              context.goNamed(
                                                                  'PinCodePage');

                                                              if (_shouldSetState)
                                                                setState(() {});
                                                              return;
                                                            }
                                                            showModalBottomSheet(
                                                              isScrollControlled:
                                                                  true,
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              barrierColor: Color(
                                                                  0x00000000),
                                                              context: context,
                                                              builder:
                                                                  (context) {
                                                                return WebViewAware(
                                                                  child:
                                                                      GestureDetector(
                                                                    onTap: () => _model
                                                                            .unfocusNode
                                                                            .canRequestFocus
                                                                        ? FocusScope.of(context).requestFocus(_model
                                                                            .unfocusNode)
                                                                        : FocusScope.of(context)
                                                                            .unfocus(),
                                                                    child:
                                                                        Padding(
                                                                      padding: MediaQuery
                                                                          .viewInsetsOf(
                                                                              context),
                                                                      child:
                                                                          Container(
                                                                        height:
                                                                            double.infinity,
                                                                        child:
                                                                            LoadingSceneWidget(),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                );
                                                              },
                                                            ).then((value) =>
                                                                safeSetState(
                                                                    () {}));

                                                            _model.checkLoginFormService =
                                                                await ActionUserAPICall
                                                                    .call(
                                                              token: FFAppState()
                                                                  .accessToken,
                                                              apiUrl: FFAppState()
                                                                  .apiURLLocalState,
                                                            );

                                                            _shouldSetState =
                                                                true;
                                                            if ((_model.checkLoginFormService
                                                                        ?.statusCode ??
                                                                    200) !=
                                                                200) {
                                                              if (!((ActionUserAPICall
                                                                          .message(
                                                                        (_model.checkLoginFormService?.jsonBody ??
                                                                            ''),
                                                                      ) ==
                                                                      'The token has been blacklisted') ||
                                                                  (ActionUserAPICall
                                                                          .message(
                                                                        (_model.checkLoginFormService?.jsonBody ??
                                                                            ''),
                                                                      ) ==
                                                                      'Token Signature could not be verified.'))) {
                                                                await showDialog(
                                                                  context:
                                                                      context,
                                                                  builder:
                                                                      (alertDialogContext) {
                                                                    return WebViewAware(
                                                                      child:
                                                                          AlertDialog(
                                                                        content:
                                                                            Text('พบข้อผิดพลาด (${(_model.checkLoginFormService?.statusCode ?? 200).toString()})'),
                                                                        actions: [
                                                                          TextButton(
                                                                            onPressed: () =>
                                                                                Navigator.pop(alertDialogContext),
                                                                            child:
                                                                                Text('Ok'),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    );
                                                                  },
                                                                );
                                                                if (_shouldSetState)
                                                                  setState(
                                                                      () {});
                                                                return;
                                                              }
                                                              await showDialog(
                                                                context:
                                                                    context,
                                                                builder:
                                                                    (alertDialogContext) {
                                                                  return WebViewAware(
                                                                    child:
                                                                        AlertDialog(
                                                                      content: Text(
                                                                          'Session Loginหมดอายุ'),
                                                                      actions: [
                                                                        TextButton(
                                                                          onPressed: () =>
                                                                              Navigator.pop(alertDialogContext),
                                                                          child:
                                                                              Text('Ok'),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  );
                                                                },
                                                              );
                                                              FFAppState()
                                                                      .loginStateFirebase =
                                                                  '[loginStateFirebase]';
                                                              FFAppState()
                                                                  .deleteAccessToken();
                                                              FFAppState()
                                                                      .accessToken =
                                                                  'access_token';

                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deleteEmployeeID();
                                                              FFAppState()
                                                                      .employeeID =
                                                                  'employee_id';

                                                              FFAppState()
                                                                      .QRCodeLink =
                                                                  'qrcode_link';
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deleteApiURLLocalState();
                                                              FFAppState()
                                                                      .apiURLLocalState =
                                                                  'api_url_local_state';

                                                              FFAppState()
                                                                  .deleteBranchCode();
                                                              FFAppState()
                                                                      .branchCode =
                                                                  'branch_code';

                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                      .isFromSetPinPage =
                                                                  false;
                                                              FFAppState()
                                                                  .leadChannelColor = [];
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .leadChannelList = [];
                                                              FFAppState()
                                                                      .isFromLoginPage =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deletePinCodeAuthen();
                                                              FFAppState()
                                                                      .pinCodeAuthen =
                                                                  '013972';

                                                              FFAppState()
                                                                      .isFromAuthenPage =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deleteDateDoNotShowAgain();
                                                              FFAppState()
                                                                      .dateDoNotShowAgain =
                                                                  null;

                                                              FFAppState()
                                                                  .deleteDoNotShowAgain();
                                                              FFAppState()
                                                                      .doNotShowAgain =
                                                                  false;

                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                      .inAppViaNotification =
                                                                  true;
                                                              FFAppState()
                                                                      .isInApp =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                      .fcmToken =
                                                                  'fcm_token';
                                                              FFAppState()
                                                                      .isPassLoginSection =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              Navigator.pop(
                                                                  context);
                                                              await actions
                                                                  .a22();

                                                              context.goNamed(
                                                                  'LoginPage');

                                                              if (_shouldSetState)
                                                                setState(() {});
                                                              return;
                                                            }
                                                            if (functions
                                                                .checkFormServiceUrl(
                                                                    listViewSawadFormServicesRecord
                                                                        .formServiceUrl)) {
                                                              var userLogRecordReference =
                                                                  UserLogRecord
                                                                      .collection
                                                                      .doc();
                                                              await userLogRecordReference
                                                                  .set(
                                                                      createUserLogRecordData(
                                                                employeeId:
                                                                    FFAppState()
                                                                        .employeeID,
                                                                action:
                                                                    valueOrDefault<
                                                                        String>(
                                                                  'Form_Service_${listViewSawadFormServicesRecord.formServiceName}',
                                                                  '[form_service_action]',
                                                                ),
                                                                actionTime:
                                                                    getCurrentTimestamp,
                                                                userLocation:
                                                                    currentUserLocationValue,
                                                              ));
                                                              _model.createdUserLogFormService =
                                                                  UserLogRecord
                                                                      .getDocumentFromData(
                                                                          createUserLogRecordData(
                                                                            employeeId:
                                                                                FFAppState().employeeID,
                                                                            action:
                                                                                valueOrDefault<String>(
                                                                              'Form_Service_${listViewSawadFormServicesRecord.formServiceName}',
                                                                              '[form_service_action]',
                                                                            ),
                                                                            actionTime:
                                                                                getCurrentTimestamp,
                                                                            userLocation:
                                                                                currentUserLocationValue,
                                                                          ),
                                                                          userLogRecordReference);
                                                              _shouldSetState =
                                                                  true;
                                                              Navigator.pop(
                                                                  context);
                                                              await launchURL(
                                                                  listViewSawadFormServicesRecord
                                                                      .formServiceUrl);
                                                              if (_shouldSetState)
                                                                setState(() {});
                                                              return;
                                                            }
                                                            Navigator.pop(
                                                                context);

                                                            context.goNamed(
                                                              'FormServicePage',
                                                              queryParameters: {
                                                                'formServiceName':
                                                                    serializeParam(
                                                                  listViewSawadFormServicesRecord
                                                                      .formServiceName,
                                                                  ParamType
                                                                      .String,
                                                                ),
                                                                'formServiceUrl':
                                                                    serializeParam(
                                                                  listViewSawadFormServicesRecord
                                                                      .formServiceUrl,
                                                                  ParamType
                                                                      .String,
                                                                ),
                                                              }.withoutNulls,
                                                            );

                                                            if (_shouldSetState)
                                                              setState(() {});
                                                          },
                                                          child: Material(
                                                            color: Colors
                                                                .transparent,
                                                            elevation: 2.0,
                                                            shape:
                                                                RoundedRectangleBorder(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          12.0),
                                                            ),
                                                            child: Container(
                                                              width: 300.0,
                                                              height: 165.0,
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                image:
                                                                    DecorationImage(
                                                                  fit: BoxFit
                                                                      .cover,
                                                                  image:
                                                                      CachedNetworkImageProvider(
                                                                    listViewSawadFormServicesRecord
                                                                        .formServiceImg,
                                                                  ),
                                                                ),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            12.0),
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        if (responsiveVisibility(
                                          context: context,
                                          phone: false,
                                        ))
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 30.0, 10.0, 0.0),
                                            child: Container(
                                              width: double.infinity,
                                              height: MediaQuery.sizeOf(context)
                                                      .height *
                                                  0.15,
                                              decoration: BoxDecoration(),
                                              child: FutureBuilder<
                                                  List<
                                                      SawadFormServicesRecord>>(
                                                future:
                                                    querySawadFormServicesRecordOnce(
                                                  queryBuilder:
                                                      (sawadFormServicesRecord) =>
                                                          sawadFormServicesRecord
                                                              .orderBy(
                                                                  'form_service_order'),
                                                ),
                                                builder: (context, snapshot) {
                                                  // Customize what your widget looks like when it's loading.
                                                  if (!snapshot.hasData) {
                                                    return Center(
                                                      child: SizedBox(
                                                        width: 50.0,
                                                        height: 50.0,
                                                        child:
                                                            CircularProgressIndicator(
                                                          valueColor:
                                                              AlwaysStoppedAnimation<
                                                                  Color>(
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .tertiary,
                                                          ),
                                                        ),
                                                      ),
                                                    );
                                                  }
                                                  List<SawadFormServicesRecord>
                                                      listViewSawadFormServicesRecordList =
                                                      snapshot.data!;
                                                  return ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    itemCount:
                                                        listViewSawadFormServicesRecordList
                                                            .length,
                                                    itemBuilder: (context,
                                                        listViewIndex) {
                                                      final listViewSawadFormServicesRecord =
                                                          listViewSawadFormServicesRecordList[
                                                              listViewIndex];
                                                      return Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    10.0,
                                                                    5.0,
                                                                    0.0,
                                                                    5.0),
                                                        child: InkWell(
                                                          splashColor: Colors
                                                              .transparent,
                                                          focusColor: Colors
                                                              .transparent,
                                                          hoverColor: Colors
                                                              .transparent,
                                                          highlightColor: Colors
                                                              .transparent,
                                                          onTap: () async {
                                                            currentUserLocationValue =
                                                                await getCurrentUserLocation(
                                                                    defaultLocation:
                                                                        LatLng(
                                                                            0.0,
                                                                            0.0));
                                                            var _shouldSetState =
                                                                false;
                                                            HapticFeedback
                                                                .mediumImpact();
                                                            showModalBottomSheet(
                                                              isScrollControlled:
                                                                  true,
                                                              backgroundColor:
                                                                  Colors
                                                                      .transparent,
                                                              barrierColor: Color(
                                                                  0x00000000),
                                                              context: context,
                                                              builder:
                                                                  (context) {
                                                                return WebViewAware(
                                                                  child:
                                                                      GestureDetector(
                                                                    onTap: () => _model
                                                                            .unfocusNode
                                                                            .canRequestFocus
                                                                        ? FocusScope.of(context).requestFocus(_model
                                                                            .unfocusNode)
                                                                        : FocusScope.of(context)
                                                                            .unfocus(),
                                                                    child:
                                                                        Padding(
                                                                      padding: MediaQuery
                                                                          .viewInsetsOf(
                                                                              context),
                                                                      child:
                                                                          Container(
                                                                        height:
                                                                            double.infinity,
                                                                        child:
                                                                            LoadingSceneWidget(),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                );
                                                              },
                                                            ).then((value) =>
                                                                safeSetState(
                                                                    () {}));

                                                            _model.checkLoginFormServicetab =
                                                                await ActionUserAPICall
                                                                    .call(
                                                              token: FFAppState()
                                                                  .accessToken,
                                                              apiUrl: FFAppState()
                                                                  .apiURLLocalState,
                                                            );

                                                            _shouldSetState =
                                                                true;
                                                            if ((_model.checkLoginFormServicetab
                                                                        ?.statusCode ??
                                                                    200) !=
                                                                200) {
                                                              if (!((ActionUserAPICall
                                                                          .message(
                                                                        (_model.checkLoginFormServicetab?.jsonBody ??
                                                                            ''),
                                                                      ) ==
                                                                      'The token has been blacklisted') ||
                                                                  (ActionUserAPICall
                                                                          .message(
                                                                        (_model.checkLoginFormServicetab?.jsonBody ??
                                                                            ''),
                                                                      ) ==
                                                                      'Token Signature could not be verified.'))) {
                                                                await showDialog(
                                                                  context:
                                                                      context,
                                                                  builder:
                                                                      (alertDialogContext) {
                                                                    return WebViewAware(
                                                                      child:
                                                                          AlertDialog(
                                                                        content:
                                                                            Text('พบข้อผิดพลาด (${(_model.checkLoginFormServicetab?.statusCode ?? 200).toString()})'),
                                                                        actions: [
                                                                          TextButton(
                                                                            onPressed: () =>
                                                                                Navigator.pop(alertDialogContext),
                                                                            child:
                                                                                Text('Ok'),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    );
                                                                  },
                                                                );
                                                                if (_shouldSetState)
                                                                  setState(
                                                                      () {});
                                                                return;
                                                              }
                                                              await showDialog(
                                                                context:
                                                                    context,
                                                                builder:
                                                                    (alertDialogContext) {
                                                                  return WebViewAware(
                                                                    child:
                                                                        AlertDialog(
                                                                      content: Text(
                                                                          'Session Loginหมดอายุ'),
                                                                      actions: [
                                                                        TextButton(
                                                                          onPressed: () =>
                                                                              Navigator.pop(alertDialogContext),
                                                                          child:
                                                                              Text('Ok'),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  );
                                                                },
                                                              );
                                                              FFAppState()
                                                                      .loginStateFirebase =
                                                                  '[loginStateFirebase]';
                                                              FFAppState()
                                                                  .deleteAccessToken();
                                                              FFAppState()
                                                                      .accessToken =
                                                                  'access_token';

                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deleteEmployeeID();
                                                              FFAppState()
                                                                      .employeeID =
                                                                  'employee_id';

                                                              FFAppState()
                                                                      .QRCodeLink =
                                                                  'qrcode_link';
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deleteApiURLLocalState();
                                                              FFAppState()
                                                                      .apiURLLocalState =
                                                                  'api_url_local_state';

                                                              FFAppState()
                                                                  .deleteBranchCode();
                                                              FFAppState()
                                                                      .branchCode =
                                                                  'branch_code';

                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                      .isFromSetPinPage =
                                                                  false;
                                                              FFAppState()
                                                                  .leadChannelColor = [];
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .leadChannelList = [];
                                                              FFAppState()
                                                                      .isFromLoginPage =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deletePinCodeAuthen();
                                                              FFAppState()
                                                                      .pinCodeAuthen =
                                                                  '013972';

                                                              FFAppState()
                                                                      .isFromAuthenPage =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                  .deleteDateDoNotShowAgain();
                                                              FFAppState()
                                                                      .dateDoNotShowAgain =
                                                                  null;

                                                              FFAppState()
                                                                  .deleteDoNotShowAgain();
                                                              FFAppState()
                                                                      .doNotShowAgain =
                                                                  false;

                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                      .inAppViaNotification =
                                                                  true;
                                                              FFAppState()
                                                                      .isInApp =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              FFAppState()
                                                                      .fcmToken =
                                                                  'fcm_token';
                                                              FFAppState()
                                                                      .isPassLoginSection =
                                                                  false;
                                                              FFAppState()
                                                                  .update(
                                                                      () {});
                                                              Navigator.pop(
                                                                  context);
                                                              await actions
                                                                  .a22();

                                                              context.goNamed(
                                                                  'LoginPage');

                                                              if (_shouldSetState)
                                                                setState(() {});
                                                              return;
                                                            }
                                                            if (functions
                                                                .checkFormServiceUrl(
                                                                    listViewSawadFormServicesRecord
                                                                        .formServiceUrl)) {
                                                              var userLogRecordReference =
                                                                  UserLogRecord
                                                                      .collection
                                                                      .doc();
                                                              await userLogRecordReference
                                                                  .set(
                                                                      createUserLogRecordData(
                                                                employeeId:
                                                                    FFAppState()
                                                                        .employeeID,
                                                                action:
                                                                    valueOrDefault<
                                                                        String>(
                                                                  'Form_Service_${listViewSawadFormServicesRecord.formServiceName}',
                                                                  '[form_service_action]',
                                                                ),
                                                                actionTime:
                                                                    getCurrentTimestamp,
                                                                userLocation:
                                                                    currentUserLocationValue,
                                                              ));
                                                              _model.createdUserLogFormServicetab =
                                                                  UserLogRecord
                                                                      .getDocumentFromData(
                                                                          createUserLogRecordData(
                                                                            employeeId:
                                                                                FFAppState().employeeID,
                                                                            action:
                                                                                valueOrDefault<String>(
                                                                              'Form_Service_${listViewSawadFormServicesRecord.formServiceName}',
                                                                              '[form_service_action]',
                                                                            ),
                                                                            actionTime:
                                                                                getCurrentTimestamp,
                                                                            userLocation:
                                                                                currentUserLocationValue,
                                                                          ),
                                                                          userLogRecordReference);
                                                              _shouldSetState =
                                                                  true;
                                                              Navigator.pop(
                                                                  context);
                                                              await launchURL(
                                                                  listViewSawadFormServicesRecord
                                                                      .formServiceUrl);
                                                              if (_shouldSetState)
                                                                setState(() {});
                                                              return;
                                                            }
                                                            Navigator.pop(
                                                                context);

                                                            context.goNamed(
                                                              'FormServicePage',
                                                              queryParameters: {
                                                                'formServiceName':
                                                                    serializeParam(
                                                                  listViewSawadFormServicesRecord
                                                                      .formServiceName,
                                                                  ParamType
                                                                      .String,
                                                                ),
                                                                'formServiceUrl':
                                                                    serializeParam(
                                                                  listViewSawadFormServicesRecord
                                                                      .formServiceUrl,
                                                                  ParamType
                                                                      .String,
                                                                ),
                                                              }.withoutNulls,
                                                            );

                                                            if (_shouldSetState)
                                                              setState(() {});
                                                          },
                                                          child: Material(
                                                            color: Colors
                                                                .transparent,
                                                            elevation: 2.0,
                                                            shape:
                                                                RoundedRectangleBorder(
                                                              borderRadius:
                                                                  BorderRadius
                                                                      .circular(
                                                                          12.0),
                                                            ),
                                                            child: Container(
                                                              width: 300.0,
                                                              height: 165.0,
                                                              decoration:
                                                                  BoxDecoration(
                                                                color: FlutterFlowTheme.of(
                                                                        context)
                                                                    .secondaryBackground,
                                                                image:
                                                                    DecorationImage(
                                                                  fit: BoxFit
                                                                      .cover,
                                                                  image:
                                                                      CachedNetworkImageProvider(
                                                                    listViewSawadFormServicesRecord
                                                                        .formServiceImg,
                                                                  ),
                                                                ),
                                                                borderRadius:
                                                                    BorderRadius
                                                                        .circular(
                                                                            12.0),
                                                              ),
                                                            ),
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        if (responsiveVisibility(
                                          context: context,
                                          tablet: false,
                                          tabletLandscape: false,
                                          desktop: false,
                                        ))
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 0.0, 10.0, 30.0),
                                            child: Container(
                                              width: double.infinity,
                                              height: 195.0,
                                              decoration: BoxDecoration(),
                                              child: FutureBuilder<
                                                  List<
                                                      SawadAnnouncementRecord>>(
                                                future:
                                                    querySawadAnnouncementRecordOnce(
                                                  queryBuilder:
                                                      (sawadAnnouncementRecord) =>
                                                          sawadAnnouncementRecord
                                                              .orderBy('order'),
                                                ),
                                                builder: (context, snapshot) {
                                                  // Customize what your widget looks like when it's loading.
                                                  if (!snapshot.hasData) {
                                                    return Center(
                                                      child: SizedBox(
                                                        width: 50.0,
                                                        height: 50.0,
                                                        child:
                                                            CircularProgressIndicator(
                                                          valueColor:
                                                              AlwaysStoppedAnimation<
                                                                  Color>(
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .tertiary,
                                                          ),
                                                        ),
                                                      ),
                                                    );
                                                  }
                                                  List<SawadAnnouncementRecord>
                                                      listViewSawadAnnouncementRecordList =
                                                      snapshot.data!;
                                                  return ListView.builder(
                                                    padding:
                                                        EdgeInsets.fromLTRB(
                                                      10.0,
                                                      0,
                                                      10.0,
                                                      0,
                                                    ),
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    itemCount:
                                                        listViewSawadAnnouncementRecordList
                                                            .length,
                                                    itemBuilder: (context,
                                                        listViewIndex) {
                                                      final listViewSawadAnnouncementRecord =
                                                          listViewSawadAnnouncementRecordList[
                                                              listViewIndex];
                                                      return Align(
                                                        alignment:
                                                            AlignmentDirectional(
                                                                0.0, -1.0),
                                                        child: Container(
                                                          width: 330.0,
                                                          height:
                                                              double.infinity,
                                                          child: Stack(
                                                            children: [
                                                              Align(
                                                                alignment:
                                                                    AlignmentDirectional(
                                                                        -1.0,
                                                                        0.0),
                                                                child: Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          0.0,
                                                                          10.0,
                                                                          0.0,
                                                                          0.0),
                                                                  child:
                                                                      Container(
                                                                    width:
                                                                        300.0,
                                                                    height:
                                                                        165.0,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      color: FlutterFlowTheme.of(
                                                                              context)
                                                                          .secondaryBackground,
                                                                      boxShadow: [
                                                                        BoxShadow(
                                                                          blurRadius:
                                                                              4.0,
                                                                          color:
                                                                              Color(0x230E151B),
                                                                          offset:
                                                                              Offset(
                                                                            0.0,
                                                                            2.0,
                                                                          ),
                                                                        )
                                                                      ],
                                                                      borderRadius:
                                                                          BorderRadius
                                                                              .only(
                                                                        bottomLeft:
                                                                            Radius.circular(28.0),
                                                                        bottomRight:
                                                                            Radius.circular(12.0),
                                                                        topLeft:
                                                                            Radius.circular(12.0),
                                                                        topRight:
                                                                            Radius.circular(28.0),
                                                                      ),
                                                                    ),
                                                                    child: Row(
                                                                      mainAxisSize:
                                                                          MainAxisSize
                                                                              .max,
                                                                      mainAxisAlignment:
                                                                          MainAxisAlignment
                                                                              .spaceBetween,
                                                                      children: [
                                                                        Expanded(
                                                                          child:
                                                                              Padding(
                                                                            padding: EdgeInsetsDirectional.fromSTEB(
                                                                                10.0,
                                                                                10.0,
                                                                                5.0,
                                                                                0.0),
                                                                            child:
                                                                                Column(
                                                                              mainAxisSize: MainAxisSize.max,
                                                                              crossAxisAlignment: CrossAxisAlignment.start,
                                                                              children: [
                                                                                Text(
                                                                                  listViewSawadAnnouncementRecord.title,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        fontSize: 18.0,
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                                Divider(
                                                                                  color: FlutterFlowTheme.of(context).grayIcon,
                                                                                ),
                                                                                Text(
                                                                                  listViewSawadAnnouncementRecord.announceDate,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                                Text(
                                                                                  listViewSawadAnnouncementRecord.body,
                                                                                  textAlign: TextAlign.start,
                                                                                  style: FlutterFlowTheme.of(context).bodyMedium.override(
                                                                                        fontFamily: 'Poppins',
                                                                                        letterSpacing: 0.0,
                                                                                      ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          ),
                                                                        ),
                                                                        Padding(
                                                                          padding: EdgeInsetsDirectional.fromSTEB(
                                                                              0.0,
                                                                              0.0,
                                                                              5.0,
                                                                              0.0),
                                                                          child:
                                                                              Container(
                                                                            width:
                                                                                130.0,
                                                                            height:
                                                                                130.0,
                                                                            decoration:
                                                                                BoxDecoration(
                                                                              color: Color(0xFFFFE4D2),
                                                                              borderRadius: BorderRadius.circular(12.0),
                                                                            ),
                                                                            child:
                                                                                Align(
                                                                              alignment: AlignmentDirectional(0.0, 0.0),
                                                                              child: Padding(
                                                                                padding: EdgeInsets.all(8.0),
                                                                                child: InkWell(
                                                                                  splashColor: Colors.transparent,
                                                                                  focusColor: Colors.transparent,
                                                                                  hoverColor: Colors.transparent,
                                                                                  highlightColor: Colors.transparent,
                                                                                  onTap: () async {
                                                                                    if (!(FFAppState().isFromAuthenPage || FFAppState().isFromSetPinPage)) {
                                                                                      Navigator.pop(context);

                                                                                      context.goNamed('PinCodePage');

                                                                                      return;
                                                                                    }
                                                                                    await showModalBottomSheet(
                                                                                      isScrollControlled: true,
                                                                                      backgroundColor: Colors.black,
                                                                                      barrierColor: Color(0x00000000),
                                                                                      context: context,
                                                                                      builder: (context) {
                                                                                        return WebViewAware(
                                                                                          child: GestureDetector(
                                                                                            onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                            child: Padding(
                                                                                              padding: MediaQuery.viewInsetsOf(context),
                                                                                              child: Container(
                                                                                                height: 600.0,
                                                                                                child: PDFViewerWidget(
                                                                                                  pdfUrl: listViewSawadAnnouncementRecord.pdfUrl,
                                                                                                ),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        );
                                                                                      },
                                                                                    ).then((value) => safeSetState(() {}));
                                                                                  },
                                                                                  child: Image.asset(
                                                                                    'assets/images/pngegg.png',
                                                                                    width: double.infinity,
                                                                                    height: double.infinity,
                                                                                    fit: BoxFit.contain,
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ),
                                                                      ],
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                              if (listViewSawadAnnouncementRecord
                                                                  .newAnnouncement)
                                                                Align(
                                                                  alignment:
                                                                      AlignmentDirectional(
                                                                          1.0,
                                                                          -1.0),
                                                                  child:
                                                                      Container(
                                                                    width: 60.0,
                                                                    height:
                                                                        60.0,
                                                                    clipBehavior:
                                                                        Clip.antiAlias,
                                                                    decoration:
                                                                        BoxDecoration(
                                                                      shape: BoxShape
                                                                          .circle,
                                                                    ),
                                                                    child: Image
                                                                        .asset(
                                                                      'assets/images/new_gif.gif',
                                                                      fit: BoxFit
                                                                          .cover,
                                                                    ),
                                                                  ),
                                                                ),
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                        if (responsiveVisibility(
                                          context: context,
                                          phone: false,
                                        ))
                                          Padding(
                                            padding:
                                                EdgeInsetsDirectional.fromSTEB(
                                                    0.0, 10.0, 10.0, 0.0),
                                            child: Container(
                                              width: double.infinity,
                                              height: MediaQuery.sizeOf(context)
                                                      .height *
                                                  0.15,
                                              decoration: BoxDecoration(),
                                              child: FutureBuilder<
                                                  List<
                                                      SawadAnnouncementRecord>>(
                                                future:
                                                    querySawadAnnouncementRecordOnce(
                                                  queryBuilder:
                                                      (sawadAnnouncementRecord) =>
                                                          sawadAnnouncementRecord
                                                              .orderBy('order'),
                                                ),
                                                builder: (context, snapshot) {
                                                  // Customize what your widget looks like when it's loading.
                                                  if (!snapshot.hasData) {
                                                    return Center(
                                                      child: SizedBox(
                                                        width: 50.0,
                                                        height: 50.0,
                                                        child:
                                                            CircularProgressIndicator(
                                                          valueColor:
                                                              AlwaysStoppedAnimation<
                                                                  Color>(
                                                            FlutterFlowTheme.of(
                                                                    context)
                                                                .tertiary,
                                                          ),
                                                        ),
                                                      ),
                                                    );
                                                  }
                                                  List<SawadAnnouncementRecord>
                                                      listViewSawadAnnouncementRecordList =
                                                      snapshot.data!;
                                                  return ListView.builder(
                                                    padding: EdgeInsets.zero,
                                                    shrinkWrap: true,
                                                    scrollDirection:
                                                        Axis.horizontal,
                                                    itemCount:
                                                        listViewSawadAnnouncementRecordList
                                                            .length,
                                                    itemBuilder: (context,
                                                        listViewIndex) {
                                                      final listViewSawadAnnouncementRecord =
                                                          listViewSawadAnnouncementRecordList[
                                                              listViewIndex];
                                                      return Padding(
                                                        padding:
                                                            EdgeInsetsDirectional
                                                                .fromSTEB(
                                                                    10.0,
                                                                    0.0,
                                                                    0.0,
                                                                    0.0),
                                                        child: Container(
                                                          width: 300.0,
                                                          height: 165.0,
                                                          decoration:
                                                              BoxDecoration(
                                                            color: FlutterFlowTheme
                                                                    .of(context)
                                                                .secondaryBackground,
                                                            boxShadow: [
                                                              BoxShadow(
                                                                blurRadius: 4.0,
                                                                color: Color(
                                                                    0x230E151B),
                                                                offset: Offset(
                                                                  0.0,
                                                                  2.0,
                                                                ),
                                                              )
                                                            ],
                                                            borderRadius:
                                                                BorderRadius
                                                                    .circular(
                                                                        12.0),
                                                          ),
                                                          child: Row(
                                                            mainAxisSize:
                                                                MainAxisSize
                                                                    .max,
                                                            mainAxisAlignment:
                                                                MainAxisAlignment
                                                                    .spaceBetween,
                                                            children: [
                                                              Expanded(
                                                                child: Padding(
                                                                  padding: EdgeInsetsDirectional
                                                                      .fromSTEB(
                                                                          10.0,
                                                                          10.0,
                                                                          5.0,
                                                                          0.0),
                                                                  child: Column(
                                                                    mainAxisSize:
                                                                        MainAxisSize
                                                                            .max,
                                                                    crossAxisAlignment:
                                                                        CrossAxisAlignment
                                                                            .start,
                                                                    children: [
                                                                      Text(
                                                                        listViewSawadAnnouncementRecord
                                                                            .title,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium
                                                                            .override(
                                                                              fontFamily: 'Poppins',
                                                                              fontSize: 18.0,
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                      ),
                                                                      Divider(
                                                                        color: FlutterFlowTheme.of(context)
                                                                            .grayIcon,
                                                                      ),
                                                                      Text(
                                                                        listViewSawadAnnouncementRecord
                                                                            .announceDate,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium
                                                                            .override(
                                                                              fontFamily: 'Poppins',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                      ),
                                                                      Text(
                                                                        listViewSawadAnnouncementRecord
                                                                            .body,
                                                                        textAlign:
                                                                            TextAlign.start,
                                                                        style: FlutterFlowTheme.of(context)
                                                                            .bodyMedium
                                                                            .override(
                                                                              fontFamily: 'Poppins',
                                                                              letterSpacing: 0.0,
                                                                            ),
                                                                      ),
                                                                    ],
                                                                  ),
                                                                ),
                                                              ),
                                                              Padding(
                                                                padding:
                                                                    EdgeInsetsDirectional
                                                                        .fromSTEB(
                                                                            0.0,
                                                                            0.0,
                                                                            5.0,
                                                                            0.0),
                                                                child:
                                                                    Container(
                                                                  width: 130.0,
                                                                  height: 130.0,
                                                                  decoration:
                                                                      BoxDecoration(
                                                                    color: Color(
                                                                        0xFFFFE4D2),
                                                                    borderRadius:
                                                                        BorderRadius.circular(
                                                                            12.0),
                                                                  ),
                                                                  child: Align(
                                                                    alignment:
                                                                        AlignmentDirectional(
                                                                            0.0,
                                                                            0.0),
                                                                    child:
                                                                        Padding(
                                                                      padding:
                                                                          EdgeInsets.all(
                                                                              8.0),
                                                                      child:
                                                                          InkWell(
                                                                        splashColor:
                                                                            Colors.transparent,
                                                                        focusColor:
                                                                            Colors.transparent,
                                                                        hoverColor:
                                                                            Colors.transparent,
                                                                        highlightColor:
                                                                            Colors.transparent,
                                                                        onTap:
                                                                            () async {
                                                                          await showModalBottomSheet(
                                                                            isScrollControlled:
                                                                                true,
                                                                            backgroundColor:
                                                                                Colors.black,
                                                                            barrierColor:
                                                                                Color(0x00000000),
                                                                            context:
                                                                                context,
                                                                            builder:
                                                                                (context) {
                                                                              return WebViewAware(
                                                                                child: GestureDetector(
                                                                                  onTap: () => _model.unfocusNode.canRequestFocus ? FocusScope.of(context).requestFocus(_model.unfocusNode) : FocusScope.of(context).unfocus(),
                                                                                  child: Padding(
                                                                                    padding: MediaQuery.viewInsetsOf(context),
                                                                                    child: Container(
                                                                                      height: 600.0,
                                                                                      child: PDFViewerWidget(
                                                                                        pdfUrl: listViewSawadAnnouncementRecord.pdfUrl,
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              );
                                                                            },
                                                                          ).then((value) =>
                                                                              safeSetState(() {}));
                                                                        },
                                                                        child: Image
                                                                            .asset(
                                                                          'assets/images/pngegg.png',
                                                                          width:
                                                                              double.infinity,
                                                                          height:
                                                                              double.infinity,
                                                                          fit: BoxFit
                                                                              .contain,
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                      );
                                                    },
                                                  );
                                                },
                                              ),
                                            ),
                                          ),
                                      ],
                                    ),
                                  ),
                                ],
                              );
                            },
                          ),
                        );
                      },
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}
